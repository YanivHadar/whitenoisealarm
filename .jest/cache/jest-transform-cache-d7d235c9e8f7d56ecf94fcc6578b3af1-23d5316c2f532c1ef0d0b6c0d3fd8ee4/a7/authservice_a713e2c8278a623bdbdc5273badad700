cb60b2596bb26f55a9a39e6e395826e9
"use strict";

/**
 * Authentication Service Coordinator for Alarm & White Noise App
 *
 * Central coordinator that ties together all authentication services
 * including OAuth, biometric, session management, and GDPR compliance.
 */
/* istanbul ignore next */
function cov_12q35qcmyg() {
  var path = "/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/services/auth-service.ts";
  var hash = "39aa0a23ad41901e205a7095610b66bf8753b40f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/services/auth-service.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 132
        }
      },
      "2": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 10,
          column: 50
        }
      },
      "3": {
        start: {
          line: 11,
          column: 28
        },
        end: {
          line: 11,
          column: 58
        }
      },
      "4": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 12,
          column: 54
        }
      },
      "5": {
        start: {
          line: 13,
          column: 31
        },
        end: {
          line: 13,
          column: 64
        }
      },
      "6": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 50
        }
      },
      "7": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 25
        }
      },
      "8": {
        start: {
          line: 21,
          column: 28
        },
        end: {
          line: 21,
          column: 32
        }
      },
      "9": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "10": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 53
        }
      },
      "11": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 36
        }
      },
      "12": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "13": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 36
        }
      },
      "14": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "15": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 45
        }
      },
      "16": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 36
        }
      },
      "17": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 72
        }
      },
      "18": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 41
        }
      },
      "19": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 34
        }
      },
      "20": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 32
        }
      },
      "21": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 25
        }
      },
      "22": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 63
        }
      },
      "23": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "24": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "25": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 64
        }
      },
      "26": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 59
        }
      },
      "27": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 79
        }
      },
      "28": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 59
        }
      },
      "29": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "30": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 72
        }
      },
      "31": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 63
        }
      },
      "32": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 83
        }
      },
      "33": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 63
        }
      },
      "34": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 78,
          column: 13
        }
      },
      "35": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 68
        }
      },
      "36": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 61
        }
      },
      "37": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 81
        }
      },
      "38": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 61
        }
      },
      "39": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 87,
          column: 13
        }
      },
      "40": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 84
        }
      },
      "41": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 66
        }
      },
      "42": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 86
        }
      },
      "43": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 66
        }
      },
      "44": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 76
        }
      },
      "45": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 90
        }
      },
      "46": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 59
        }
      },
      "47": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 109,
          column: 10
        }
      },
      "48": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "49": {
        start: {
          line: 117,
          column: 34
        },
        end: {
          line: 117,
          column: 94
        }
      },
      "50": {
        start: {
          line: 118,
          column: 35
        },
        end: {
          line: 118,
          column: 122
        }
      },
      "51": {
        start: {
          line: 120,
          column: 35
        },
        end: {
          line: 120,
          column: 93
        }
      },
      "52": {
        start: {
          line: 122,
          column: 38
        },
        end: {
          line: 122,
          column: 109
        }
      },
      "53": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 128,
          column: 14
        }
      },
      "54": {
        start: {
          line: 125,
          column: 56
        },
        end: {
          line: 125,
          column: 62
        }
      },
      "55": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 69
        }
      },
      "56": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 137,
          column: 14
        }
      },
      "57": {
        start: {
          line: 144,
          column: 30
        },
        end: {
          line: 144,
          column: 32
        }
      },
      "58": {
        start: {
          line: 145,
          column: 32
        },
        end: {
          line: 145,
          column: 34
        }
      },
      "59": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "60": {
        start: {
          line: 148,
          column: 34
        },
        end: {
          line: 148,
          column: 91
        }
      },
      "61": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 152,
          column: 14
        }
      },
      "62": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 67
        }
      },
      "63": {
        start: {
          line: 155,
          column: 40
        },
        end: {
          line: 155,
          column: 98
        }
      },
      "64": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 159,
          column: 14
        }
      },
      "65": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 73
        }
      },
      "66": {
        start: {
          line: 162,
          column: 39
        },
        end: {
          line: 162,
          column: 111
        }
      },
      "67": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 166,
          column: 14
        }
      },
      "68": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "69": {
        start: {
          line: 169,
          column: 34
        },
        end: {
          line: 169,
          column: 93
        }
      },
      "70": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 173,
          column: 18
        }
      },
      "71": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 179,
          column: 18
        }
      },
      "72": {
        start: {
          line: 182,
          column: 38
        },
        end: {
          line: 182,
          column: 104
        }
      },
      "73": {
        start: {
          line: 182,
          column: 79
        },
        end: {
          line: 182,
          column: 103
        }
      },
      "74": {
        start: {
          line: 183,
          column: 37
        },
        end: {
          line: 183,
          column: 102
        }
      },
      "75": {
        start: {
          line: 183,
          column: 78
        },
        end: {
          line: 183,
          column: 101
        }
      },
      "76": {
        start: {
          line: 184,
          column: 26
        },
        end: {
          line: 184,
          column: 35
        }
      },
      "77": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 190,
          column: 13
        }
      },
      "78": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 38
        }
      },
      "79": {
        start: {
          line: 188,
          column: 17
        },
        end: {
          line: 190,
          column: 13
        }
      },
      "80": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 37
        }
      },
      "81": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 195,
          column: 14
        }
      },
      "82": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 56
        }
      },
      "83": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 208,
          column: 14
        }
      },
      "84": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "85": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 64
        }
      },
      "86": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 63
        }
      },
      "87": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 239,
          column: 9
        }
      },
      "88": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 64
        }
      },
      "89": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 72
        }
      },
      "90": {
        start: {
          line: 234,
          column: 33
        },
        end: {
          line: 234,
          column: 105
        }
      },
      "91": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 81
        }
      },
      "92": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 63
        }
      },
      "93": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 59
        }
      },
      "94": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 256,
          column: 9
        }
      },
      "95": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 55
        }
      },
      "96": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 65
        }
      },
      "97": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 39
        }
      },
      "98": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 46
        }
      },
      "99": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 51
        }
      },
      "100": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 57
        }
      },
      "101": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 272,
          column: 9
        }
      },
      "102": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 27
        }
      },
      "103": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 67
        }
      },
      "104": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 271,
          column: 49
        }
      },
      "105": {
        start: {
          line: 275,
          column: 0
        },
        end: {
          line: 275,
          column: 34
        }
      },
      "106": {
        start: {
          line: 277,
          column: 0
        },
        end: {
          line: 277,
          column: 48
        }
      },
      "107": {
        start: {
          line: 279,
          column: 23
        },
        end: {
          line: 279,
          column: 73
        }
      },
      "108": {
        start: {
          line: 279,
          column: 35
        },
        end: {
          line: 279,
          column: 73
        }
      },
      "109": {
        start: {
          line: 280,
          column: 0
        },
        end: {
          line: 280,
          column: 40
        }
      },
      "110": {
        start: {
          line: 281,
          column: 28
        },
        end: {
          line: 281,
          column: 71
        }
      },
      "111": {
        start: {
          line: 281,
          column: 34
        },
        end: {
          line: 281,
          column: 71
        }
      },
      "112": {
        start: {
          line: 282,
          column: 0
        },
        end: {
          line: 282,
          column: 50
        }
      },
      "113": {
        start: {
          line: 283,
          column: 24
        },
        end: {
          line: 283,
          column: 63
        }
      },
      "114": {
        start: {
          line: 283,
          column: 30
        },
        end: {
          line: 283,
          column: 63
        }
      },
      "115": {
        start: {
          line: 284,
          column: 0
        },
        end: {
          line: 284,
          column: 42
        }
      },
      "116": {
        start: {
          line: 285,
          column: 0
        },
        end: {
          line: 285,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 22,
            column: 21
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 40
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 48
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        loc: {
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 98
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        loc: {
          start: {
            line: 114,
            column: 28
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 114
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 125,
            column: 51
          },
          end: {
            line: 125,
            column: 52
          }
        },
        loc: {
          start: {
            line: 125,
            column: 56
          },
          end: {
            line: 125,
            column: 62
          }
        },
        line: 125
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        loc: {
          start: {
            line: 143,
            column: 24
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 143
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 182,
            column: 74
          },
          end: {
            line: 182,
            column: 75
          }
        },
        loc: {
          start: {
            line: 182,
            column: 79
          },
          end: {
            line: 182,
            column: 103
          }
        },
        line: 182
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 183,
            column: 73
          },
          end: {
            line: 183,
            column: 74
          }
        },
        loc: {
          start: {
            line: 183,
            column: 78
          },
          end: {
            line: 183,
            column: 101
          }
        },
        line: 183
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        },
        loc: {
          start: {
            line: 214,
            column: 28
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 214
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        loc: {
          start: {
            line: 228,
            column: 28
          },
          end: {
            line: 240,
            column: 5
          }
        },
        line: 228
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 244,
            column: 4
          },
          end: {
            line: 244,
            column: 5
          }
        },
        loc: {
          start: {
            line: 244,
            column: 14
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 244
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 261,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        loc: {
          start: {
            line: 261,
            column: 18
          },
          end: {
            line: 273,
            column: 5
          }
        },
        line: 261
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 279,
            column: 23
          },
          end: {
            line: 279,
            column: 24
          }
        },
        loc: {
          start: {
            line: 279,
            column: 35
          },
          end: {
            line: 279,
            column: 73
          }
        },
        line: 279
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 281,
            column: 28
          },
          end: {
            line: 281,
            column: 29
          }
        },
        loc: {
          start: {
            line: 281,
            column: 34
          },
          end: {
            line: 281,
            column: 71
          }
        },
        line: 281
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 283,
            column: 24
          },
          end: {
            line: 283,
            column: 25
          }
        },
        loc: {
          start: {
            line: 283,
            column: 30
          },
          end: {
            line: 283,
            column: 63
          }
        },
        line: 283
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 157,
            column: 24
          },
          end: {
            line: 157,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 54
          },
          end: {
            line: 157,
            column: 63
          }
        }, {
          start: {
            line: 157,
            column: 66
          },
          end: {
            line: 157,
            column: 76
          }
        }],
        line: 157
      },
      "4": {
        loc: {
          start: {
            line: 164,
            column: 24
          },
          end: {
            line: 164,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 164,
            column: 54
          },
          end: {
            line: 164,
            column: 63
          }
        }, {
          start: {
            line: 164,
            column: 66
          },
          end: {
            line: 164,
            column: 76
          }
        }],
        line: 164
      },
      "5": {
        loc: {
          start: {
            line: 165,
            column: 24
          },
          end: {
            line: 165,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 54
          },
          end: {
            line: 165,
            column: 56
          }
        }, {
          start: {
            line: 165,
            column: 59
          },
          end: {
            line: 165,
            column: 84
          }
        }],
        line: 165
      },
      "6": {
        loc: {
          start: {
            line: 171,
            column: 28
          },
          end: {
            line: 171,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 36
          },
          end: {
            line: 171,
            column: 47
          }
        }, {
          start: {
            line: 171,
            column: 50
          },
          end: {
            line: 171,
            column: 59
          }
        }],
        line: 171
      },
      "7": {
        loc: {
          start: {
            line: 172,
            column: 28
          },
          end: {
            line: 172,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 172,
            column: 36
          },
          end: {
            line: 172,
            column: 51
          }
        }, {
          start: {
            line: 172,
            column: 54
          },
          end: {
            line: 172,
            column: 56
          }
        }],
        line: 172
      },
      "8": {
        loc: {
          start: {
            line: 178,
            column: 29
          },
          end: {
            line: 178,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 29
          },
          end: {
            line: 178,
            column: 42
          }
        }, {
          start: {
            line: 178,
            column: 46
          },
          end: {
            line: 178,
            column: 74
          }
        }],
        line: 178
      },
      "9": {
        loc: {
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 190,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 190,
            column: 13
          }
        }, {
          start: {
            line: 188,
            column: 17
          },
          end: {
            line: 190,
            column: 13
          }
        }],
        line: 185
      },
      "10": {
        loc: {
          start: {
            line: 188,
            column: 17
          },
          end: {
            line: 190,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 17
          },
          end: {
            line: 190,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/services/auth-service.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/services/auth-service.ts"],
      sourcesContent: ["/**\n * Authentication Service Coordinator for Alarm & White Noise App\n * \n * Central coordinator that ties together all authentication services\n * including OAuth, biometric, session management, and GDPR compliance.\n */\n\nimport { AppState } from 'react-native';\nimport { oauthService } from './oauth-service';\nimport { biometricService } from './biometric-service';\nimport { sessionService } from './session-service';\nimport { subscriptionService } from './subscription-service';\nimport { gdprService } from './gdpr-service';\nimport { supabase } from '../lib/supabase/client';\n\nexport interface AuthServiceStatus {\n  isInitialized: boolean;\n  services: {\n    oauth: boolean;\n    biometric: boolean;\n    session: boolean;\n    subscription: boolean;\n    gdpr: boolean;\n  };\n  errors: string[];\n}\n\nexport interface AuthServiceCapabilities {\n  biometricTypes: string[];\n  oauthProviders: string[];\n  subscriptionAvailable: boolean;\n  gdprCompliant: boolean;\n}\n\n/**\n * Authentication Service Coordinator Class\n */\nexport class AuthService {\n  private static instance: AuthService;\n  private isInitialized = false;\n  private initializationPromise: Promise<void> | null = null;\n\n  private constructor() {}\n\n  static getInstance(): AuthService {\n    if (!AuthService.instance) {\n      AuthService.instance = new AuthService();\n    }\n    return AuthService.instance;\n  }\n\n  /**\n   * Initialize all authentication services\n   */\n  async initialize(userId?: string): Promise<AuthServiceStatus> {\n    if (this.isInitialized) {\n      return this.getStatus();\n    }\n\n    if (this.initializationPromise) {\n      await this.initializationPromise;\n      return this.getStatus();\n    }\n\n    this.initializationPromise = this.performInitialization(userId);\n    await this.initializationPromise;\n    \n    this.isInitialized = true;\n    return this.getStatus();\n  }\n\n  /**\n   * Perform actual initialization\n   */\n  private async performInitialization(userId?: string): Promise<void> {\n    const errors: string[] = [];\n\n    console.log('Initializing authentication services...');\n\n    try {\n      // Initialize OAuth service\n      try {\n        await oauthService.initialize();\n        console.log('\u2705 OAuth service initialized');\n      } catch (error) {\n        console.error('\u274C OAuth service initialization failed:', error);\n        errors.push('OAuth initialization failed');\n      }\n\n      // Initialize biometric service\n      try {\n        await biometricService.initialize();\n        console.log('\u2705 Biometric service initialized');\n      } catch (error) {\n        console.error('\u274C Biometric service initialization failed:', error);\n        errors.push('Biometric initialization failed');\n      }\n\n      // Initialize session service\n      try {\n        await sessionService.initialize();\n        console.log('\u2705 Session service initialized');\n      } catch (error) {\n        console.error('\u274C Session service initialization failed:', error);\n        errors.push('Session initialization failed');\n      }\n\n      // Initialize subscription service\n      try {\n        await subscriptionService.initialize(userId);\n        console.log('\u2705 Subscription service initialized');\n      } catch (error) {\n        console.error('\u274C Subscription service initialization failed:', error);\n        errors.push('Subscription initialization failed');\n      }\n\n      console.log('Authentication services initialization completed');\n\n    } catch (error) {\n      console.error('Critical authentication service initialization error:', error);\n      errors.push('Critical initialization failure');\n    }\n  }\n\n  /**\n   * Get current service status\n   */\n  getStatus(): AuthServiceStatus {\n    return {\n      isInitialized: this.isInitialized,\n      services: {\n        oauth: true, // OAuth is always available\n        biometric: this.isInitialized,\n        session: this.isInitialized,\n        subscription: this.isInitialized,\n        gdpr: true, // GDPR service doesn't need initialization\n      },\n      errors: [], // Could track actual errors here\n    };\n  }\n\n  /**\n   * Get authentication capabilities\n   */\n  async getCapabilities(): Promise<AuthServiceCapabilities> {\n    try {\n      // Get biometric capabilities\n      const biometricCaps = await biometricService.getCapabilities();\n      const biometricTypes = biometricService.getBiometricTypeName(biometricCaps.availableTypes);\n\n      // Get OAuth providers\n      const oauthProviders = await oauthService.getAvailableProviders();\n\n      // Check subscription availability\n      const subscriptionPlans = await subscriptionService.getSubscriptionPlans();\n\n      return {\n        biometricTypes: [biometricTypes],\n        oauthProviders: oauthProviders.map(p => p.name),\n        subscriptionAvailable: subscriptionPlans.length > 0,\n        gdprCompliant: true,\n      };\n\n    } catch (error) {\n      console.error('Error getting auth capabilities:', error);\n      return {\n        biometricTypes: [],\n        oauthProviders: [],\n        subscriptionAvailable: false,\n        gdprCompliant: true,\n      };\n    }\n  }\n\n  /**\n   * Comprehensive health check\n   */\n  async healthCheck(): Promise<{\n    overall: 'healthy' | 'degraded' | 'unhealthy';\n    services: Record<string, { status: string; issues: string[] }>;\n    recommendations: string[];\n  }> {\n    const serviceChecks: Record<string, { status: string; issues: string[] }> = {};\n    const recommendations: string[] = [];\n\n    try {\n      // Check session health\n      const sessionHealth = await sessionService.getHealthMetrics();\n      serviceChecks.session = {\n        status: sessionHealth.status,\n        issues: sessionHealth.issues,\n      };\n      recommendations.push(...sessionHealth.recommendations);\n\n      // Check biometric setup\n      const biometricValidation = await biometricService.validateSetup();\n      serviceChecks.biometric = {\n        status: biometricValidation.isValid ? 'healthy' : 'degraded',\n        issues: biometricValidation.issues,\n      };\n      recommendations.push(...biometricValidation.recommendations);\n\n      // Check subscription status\n      const subscriptionStatus = await subscriptionService.getSubscriptionStatus();\n      serviceChecks.subscription = {\n        status: subscriptionStatus.isActive ? 'healthy' : 'degraded',\n        issues: subscriptionStatus.isActive ? [] : ['Subscription inactive'],\n      };\n\n      // Check Supabase connection\n      try {\n        const { error } = await supabase.from('users').select('id').limit(1);\n        serviceChecks.database = {\n          status: error ? 'unhealthy' : 'healthy',\n          issues: error ? [error.message] : [],\n        };\n      } catch (error: any) {\n        serviceChecks.database = {\n          status: 'unhealthy',\n          issues: [error.message || 'Database connection failed'],\n        };\n      }\n\n      // Determine overall health\n      const unhealthyServices = Object.values(serviceChecks).filter(s => s.status === 'unhealthy');\n      const degradedServices = Object.values(serviceChecks).filter(s => s.status === 'degraded');\n\n      let overall: 'healthy' | 'degraded' | 'unhealthy' = 'healthy';\n      if (unhealthyServices.length > 0) {\n        overall = 'unhealthy';\n      } else if (degradedServices.length > 0) {\n        overall = 'degraded';\n      }\n\n      return {\n        overall,\n        services: serviceChecks,\n        recommendations,\n      };\n\n    } catch (error) {\n      console.error('Health check error:', error);\n      return {\n        overall: 'unhealthy',\n        services: {\n          system: {\n            status: 'unhealthy',\n            issues: ['Health check system failure'],\n          },\n        },\n        recommendations: ['Restart the application'],\n      };\n    }\n  }\n\n  /**\n   * Handle app going to background\n   */\n  async onAppBackground(): Promise<void> {\n    try {\n      console.log('Auth service handling app background');\n\n      // Session service handles its own background logic\n      // OAuth service doesn't need background handling\n      // Subscription service handles background updates via RevenueCat\n\n    } catch (error) {\n      console.error('Background handling error:', error);\n    }\n  }\n\n  /**\n   * Handle app coming to foreground\n   */\n  async onAppForeground(): Promise<void> {\n    try {\n      console.log('Auth service handling app foreground');\n\n      // Check session validity\n      await sessionService.checkSessionStatus();\n\n      // Refresh subscription status\n      const customerInfo = await subscriptionService.getSubscriptionStatus();\n      console.log('Subscription status refreshed:', customerInfo.isActive);\n\n    } catch (error) {\n      console.error('Foreground handling error:', error);\n    }\n  }\n\n  /**\n   * Cleanup all services\n   */\n  cleanup(): void {\n    console.log('Cleaning up authentication services');\n\n    try {\n      sessionService.cleanup();\n      subscriptionService.cleanup();\n      // OAuth and biometric services don't need cleanup\n      // GDPR service is stateless\n\n      this.isInitialized = false;\n      this.initializationPromise = null;\n\n    } catch (error) {\n      console.error('Cleanup error:', error);\n    }\n  }\n\n  /**\n   * Reset all services (for testing or troubleshooting)\n   */\n  async reset(): Promise<void> {\n    console.log('Resetting authentication services');\n\n    try {\n      // Cleanup first\n      this.cleanup();\n\n      // Clear any cached data\n      // Note: This doesn't clear user data, just service state\n\n      console.log('Authentication services reset completed');\n\n    } catch (error) {\n      console.error('Reset error:', error);\n    }\n  }\n}\n\n// Export singleton instance\nexport const authService = AuthService.getInstance();\n\n// Convenience functions\nexport const initializeAuth = (userId?: string) => authService.initialize(userId);\nexport const getAuthCapabilities = () => authService.getCapabilities();\nexport const checkAuthHealth = () => authService.healthCheck();\n\nexport default authService;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "39aa0a23ad41901e205a7095610b66bf8753b40f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_12q35qcmyg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_12q35qcmyg();
cov_12q35qcmyg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_12q35qcmyg().s[1]++;
exports.checkAuthHealth = exports.getAuthCapabilities = exports.initializeAuth = exports.authService = exports.AuthService = void 0;
const oauth_service_1 =
/* istanbul ignore next */
(cov_12q35qcmyg().s[2]++, require("./oauth-service"));
const biometric_service_1 =
/* istanbul ignore next */
(cov_12q35qcmyg().s[3]++, require("./biometric-service"));
const session_service_1 =
/* istanbul ignore next */
(cov_12q35qcmyg().s[4]++, require("./session-service"));
const subscription_service_1 =
/* istanbul ignore next */
(cov_12q35qcmyg().s[5]++, require("./subscription-service"));
const client_1 =
/* istanbul ignore next */
(cov_12q35qcmyg().s[6]++, require("../lib/supabase/client"));
/**
 * Authentication Service Coordinator Class
 */
class AuthService {
  static instance;
  isInitialized =
  /* istanbul ignore next */
  (cov_12q35qcmyg().s[7]++, false);
  initializationPromise =
  /* istanbul ignore next */
  (cov_12q35qcmyg().s[8]++, null);
  constructor() {
    /* istanbul ignore next */
    cov_12q35qcmyg().f[0]++;
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_12q35qcmyg().f[1]++;
    cov_12q35qcmyg().s[9]++;
    if (!AuthService.instance) {
      /* istanbul ignore next */
      cov_12q35qcmyg().b[0][0]++;
      cov_12q35qcmyg().s[10]++;
      AuthService.instance = new AuthService();
    } else
    /* istanbul ignore next */
    {
      cov_12q35qcmyg().b[0][1]++;
    }
    cov_12q35qcmyg().s[11]++;
    return AuthService.instance;
  }
  /**
   * Initialize all authentication services
   */
  async initialize(userId) {
    /* istanbul ignore next */
    cov_12q35qcmyg().f[2]++;
    cov_12q35qcmyg().s[12]++;
    if (this.isInitialized) {
      /* istanbul ignore next */
      cov_12q35qcmyg().b[1][0]++;
      cov_12q35qcmyg().s[13]++;
      return this.getStatus();
    } else
    /* istanbul ignore next */
    {
      cov_12q35qcmyg().b[1][1]++;
    }
    cov_12q35qcmyg().s[14]++;
    if (this.initializationPromise) {
      /* istanbul ignore next */
      cov_12q35qcmyg().b[2][0]++;
      cov_12q35qcmyg().s[15]++;
      await this.initializationPromise;
      /* istanbul ignore next */
      cov_12q35qcmyg().s[16]++;
      return this.getStatus();
    } else
    /* istanbul ignore next */
    {
      cov_12q35qcmyg().b[2][1]++;
    }
    cov_12q35qcmyg().s[17]++;
    this.initializationPromise = this.performInitialization(userId);
    /* istanbul ignore next */
    cov_12q35qcmyg().s[18]++;
    await this.initializationPromise;
    /* istanbul ignore next */
    cov_12q35qcmyg().s[19]++;
    this.isInitialized = true;
    /* istanbul ignore next */
    cov_12q35qcmyg().s[20]++;
    return this.getStatus();
  }
  /**
   * Perform actual initialization
   */
  async performInitialization(userId) {
    /* istanbul ignore next */
    cov_12q35qcmyg().f[3]++;
    const errors =
    /* istanbul ignore next */
    (cov_12q35qcmyg().s[21]++, []);
    /* istanbul ignore next */
    cov_12q35qcmyg().s[22]++;
    console.log('Initializing authentication services...');
    /* istanbul ignore next */
    cov_12q35qcmyg().s[23]++;
    try {
      /* istanbul ignore next */
      cov_12q35qcmyg().s[24]++;
      // Initialize OAuth service
      try {
        /* istanbul ignore next */
        cov_12q35qcmyg().s[25]++;
        await oauth_service_1.oauthService.initialize();
        /* istanbul ignore next */
        cov_12q35qcmyg().s[26]++;
        console.log('✅ OAuth service initialized');
      } catch (error) {
        /* istanbul ignore next */
        cov_12q35qcmyg().s[27]++;
        console.error('❌ OAuth service initialization failed:', error);
        /* istanbul ignore next */
        cov_12q35qcmyg().s[28]++;
        errors.push('OAuth initialization failed');
      }
      // Initialize biometric service
      /* istanbul ignore next */
      cov_12q35qcmyg().s[29]++;
      try {
        /* istanbul ignore next */
        cov_12q35qcmyg().s[30]++;
        await biometric_service_1.biometricService.initialize();
        /* istanbul ignore next */
        cov_12q35qcmyg().s[31]++;
        console.log('✅ Biometric service initialized');
      } catch (error) {
        /* istanbul ignore next */
        cov_12q35qcmyg().s[32]++;
        console.error('❌ Biometric service initialization failed:', error);
        /* istanbul ignore next */
        cov_12q35qcmyg().s[33]++;
        errors.push('Biometric initialization failed');
      }
      // Initialize session service
      /* istanbul ignore next */
      cov_12q35qcmyg().s[34]++;
      try {
        /* istanbul ignore next */
        cov_12q35qcmyg().s[35]++;
        await session_service_1.sessionService.initialize();
        /* istanbul ignore next */
        cov_12q35qcmyg().s[36]++;
        console.log('✅ Session service initialized');
      } catch (error) {
        /* istanbul ignore next */
        cov_12q35qcmyg().s[37]++;
        console.error('❌ Session service initialization failed:', error);
        /* istanbul ignore next */
        cov_12q35qcmyg().s[38]++;
        errors.push('Session initialization failed');
      }
      // Initialize subscription service
      /* istanbul ignore next */
      cov_12q35qcmyg().s[39]++;
      try {
        /* istanbul ignore next */
        cov_12q35qcmyg().s[40]++;
        await subscription_service_1.subscriptionService.initialize(userId);
        /* istanbul ignore next */
        cov_12q35qcmyg().s[41]++;
        console.log('✅ Subscription service initialized');
      } catch (error) {
        /* istanbul ignore next */
        cov_12q35qcmyg().s[42]++;
        console.error('❌ Subscription service initialization failed:', error);
        /* istanbul ignore next */
        cov_12q35qcmyg().s[43]++;
        errors.push('Subscription initialization failed');
      }
      /* istanbul ignore next */
      cov_12q35qcmyg().s[44]++;
      console.log('Authentication services initialization completed');
    } catch (error) {
      /* istanbul ignore next */
      cov_12q35qcmyg().s[45]++;
      console.error('Critical authentication service initialization error:', error);
      /* istanbul ignore next */
      cov_12q35qcmyg().s[46]++;
      errors.push('Critical initialization failure');
    }
  }
  /**
   * Get current service status
   */
  getStatus() {
    /* istanbul ignore next */
    cov_12q35qcmyg().f[4]++;
    cov_12q35qcmyg().s[47]++;
    return {
      isInitialized: this.isInitialized,
      services: {
        oauth: true,
        // OAuth is always available
        biometric: this.isInitialized,
        session: this.isInitialized,
        subscription: this.isInitialized,
        gdpr: true // GDPR service doesn't need initialization
      },
      errors: [] // Could track actual errors here
    };
  }
  /**
   * Get authentication capabilities
   */
  async getCapabilities() {
    /* istanbul ignore next */
    cov_12q35qcmyg().f[5]++;
    cov_12q35qcmyg().s[48]++;
    try {
      // Get biometric capabilities
      const biometricCaps =
      /* istanbul ignore next */
      (cov_12q35qcmyg().s[49]++, await biometric_service_1.biometricService.getCapabilities());
      const biometricTypes =
      /* istanbul ignore next */
      (cov_12q35qcmyg().s[50]++, biometric_service_1.biometricService.getBiometricTypeName(biometricCaps.availableTypes));
      // Get OAuth providers
      const oauthProviders =
      /* istanbul ignore next */
      (cov_12q35qcmyg().s[51]++, await oauth_service_1.oauthService.getAvailableProviders());
      // Check subscription availability
      const subscriptionPlans =
      /* istanbul ignore next */
      (cov_12q35qcmyg().s[52]++, await subscription_service_1.subscriptionService.getSubscriptionPlans());
      /* istanbul ignore next */
      cov_12q35qcmyg().s[53]++;
      return {
        biometricTypes: [biometricTypes],
        oauthProviders: oauthProviders.map(p => {
          /* istanbul ignore next */
          cov_12q35qcmyg().f[6]++;
          cov_12q35qcmyg().s[54]++;
          return p.name;
        }),
        subscriptionAvailable: subscriptionPlans.length > 0,
        gdprCompliant: true
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_12q35qcmyg().s[55]++;
      console.error('Error getting auth capabilities:', error);
      /* istanbul ignore next */
      cov_12q35qcmyg().s[56]++;
      return {
        biometricTypes: [],
        oauthProviders: [],
        subscriptionAvailable: false,
        gdprCompliant: true
      };
    }
  }
  /**
   * Comprehensive health check
   */
  async healthCheck() {
    /* istanbul ignore next */
    cov_12q35qcmyg().f[7]++;
    const serviceChecks =
    /* istanbul ignore next */
    (cov_12q35qcmyg().s[57]++, {});
    const recommendations =
    /* istanbul ignore next */
    (cov_12q35qcmyg().s[58]++, []);
    /* istanbul ignore next */
    cov_12q35qcmyg().s[59]++;
    try {
      // Check session health
      const sessionHealth =
      /* istanbul ignore next */
      (cov_12q35qcmyg().s[60]++, await session_service_1.sessionService.getHealthMetrics());
      /* istanbul ignore next */
      cov_12q35qcmyg().s[61]++;
      serviceChecks.session = {
        status: sessionHealth.status,
        issues: sessionHealth.issues
      };
      /* istanbul ignore next */
      cov_12q35qcmyg().s[62]++;
      recommendations.push(...sessionHealth.recommendations);
      // Check biometric setup
      const biometricValidation =
      /* istanbul ignore next */
      (cov_12q35qcmyg().s[63]++, await biometric_service_1.biometricService.validateSetup());
      /* istanbul ignore next */
      cov_12q35qcmyg().s[64]++;
      serviceChecks.biometric = {
        status: biometricValidation.isValid ?
        /* istanbul ignore next */
        (cov_12q35qcmyg().b[3][0]++, 'healthy') :
        /* istanbul ignore next */
        (cov_12q35qcmyg().b[3][1]++, 'degraded'),
        issues: biometricValidation.issues
      };
      /* istanbul ignore next */
      cov_12q35qcmyg().s[65]++;
      recommendations.push(...biometricValidation.recommendations);
      // Check subscription status
      const subscriptionStatus =
      /* istanbul ignore next */
      (cov_12q35qcmyg().s[66]++, await subscription_service_1.subscriptionService.getSubscriptionStatus());
      /* istanbul ignore next */
      cov_12q35qcmyg().s[67]++;
      serviceChecks.subscription = {
        status: subscriptionStatus.isActive ?
        /* istanbul ignore next */
        (cov_12q35qcmyg().b[4][0]++, 'healthy') :
        /* istanbul ignore next */
        (cov_12q35qcmyg().b[4][1]++, 'degraded'),
        issues: subscriptionStatus.isActive ?
        /* istanbul ignore next */
        (cov_12q35qcmyg().b[5][0]++, []) :
        /* istanbul ignore next */
        (cov_12q35qcmyg().b[5][1]++, ['Subscription inactive'])
      };
      // Check Supabase connection
      /* istanbul ignore next */
      cov_12q35qcmyg().s[68]++;
      try {
        const {
          error
        } =
        /* istanbul ignore next */
        (cov_12q35qcmyg().s[69]++, await client_1.supabase.from('users').select('id').limit(1));
        /* istanbul ignore next */
        cov_12q35qcmyg().s[70]++;
        serviceChecks.database = {
          status: error ?
          /* istanbul ignore next */
          (cov_12q35qcmyg().b[6][0]++, 'unhealthy') :
          /* istanbul ignore next */
          (cov_12q35qcmyg().b[6][1]++, 'healthy'),
          issues: error ?
          /* istanbul ignore next */
          (cov_12q35qcmyg().b[7][0]++, [error.message]) :
          /* istanbul ignore next */
          (cov_12q35qcmyg().b[7][1]++, [])
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_12q35qcmyg().s[71]++;
        serviceChecks.database = {
          status: 'unhealthy',
          issues: [
          /* istanbul ignore next */
          (cov_12q35qcmyg().b[8][0]++, error.message) ||
          /* istanbul ignore next */
          (cov_12q35qcmyg().b[8][1]++, 'Database connection failed')]
        };
      }
      // Determine overall health
      const unhealthyServices =
      /* istanbul ignore next */
      (cov_12q35qcmyg().s[72]++, Object.values(serviceChecks).filter(s => {
        /* istanbul ignore next */
        cov_12q35qcmyg().f[8]++;
        cov_12q35qcmyg().s[73]++;
        return s.status === 'unhealthy';
      }));
      const degradedServices =
      /* istanbul ignore next */
      (cov_12q35qcmyg().s[74]++, Object.values(serviceChecks).filter(s => {
        /* istanbul ignore next */
        cov_12q35qcmyg().f[9]++;
        cov_12q35qcmyg().s[75]++;
        return s.status === 'degraded';
      }));
      let overall =
      /* istanbul ignore next */
      (cov_12q35qcmyg().s[76]++, 'healthy');
      /* istanbul ignore next */
      cov_12q35qcmyg().s[77]++;
      if (unhealthyServices.length > 0) {
        /* istanbul ignore next */
        cov_12q35qcmyg().b[9][0]++;
        cov_12q35qcmyg().s[78]++;
        overall = 'unhealthy';
      } else {
        /* istanbul ignore next */
        cov_12q35qcmyg().b[9][1]++;
        cov_12q35qcmyg().s[79]++;
        if (degradedServices.length > 0) {
          /* istanbul ignore next */
          cov_12q35qcmyg().b[10][0]++;
          cov_12q35qcmyg().s[80]++;
          overall = 'degraded';
        } else
        /* istanbul ignore next */
        {
          cov_12q35qcmyg().b[10][1]++;
        }
      }
      /* istanbul ignore next */
      cov_12q35qcmyg().s[81]++;
      return {
        overall,
        services: serviceChecks,
        recommendations
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_12q35qcmyg().s[82]++;
      console.error('Health check error:', error);
      /* istanbul ignore next */
      cov_12q35qcmyg().s[83]++;
      return {
        overall: 'unhealthy',
        services: {
          system: {
            status: 'unhealthy',
            issues: ['Health check system failure']
          }
        },
        recommendations: ['Restart the application']
      };
    }
  }
  /**
   * Handle app going to background
   */
  async onAppBackground() {
    /* istanbul ignore next */
    cov_12q35qcmyg().f[10]++;
    cov_12q35qcmyg().s[84]++;
    try {
      /* istanbul ignore next */
      cov_12q35qcmyg().s[85]++;
      console.log('Auth service handling app background');
      // Session service handles its own background logic
      // OAuth service doesn't need background handling
      // Subscription service handles background updates via RevenueCat
    } catch (error) {
      /* istanbul ignore next */
      cov_12q35qcmyg().s[86]++;
      console.error('Background handling error:', error);
    }
  }
  /**
   * Handle app coming to foreground
   */
  async onAppForeground() {
    /* istanbul ignore next */
    cov_12q35qcmyg().f[11]++;
    cov_12q35qcmyg().s[87]++;
    try {
      /* istanbul ignore next */
      cov_12q35qcmyg().s[88]++;
      console.log('Auth service handling app foreground');
      // Check session validity
      /* istanbul ignore next */
      cov_12q35qcmyg().s[89]++;
      await session_service_1.sessionService.checkSessionStatus();
      // Refresh subscription status
      const customerInfo =
      /* istanbul ignore next */
      (cov_12q35qcmyg().s[90]++, await subscription_service_1.subscriptionService.getSubscriptionStatus());
      /* istanbul ignore next */
      cov_12q35qcmyg().s[91]++;
      console.log('Subscription status refreshed:', customerInfo.isActive);
    } catch (error) {
      /* istanbul ignore next */
      cov_12q35qcmyg().s[92]++;
      console.error('Foreground handling error:', error);
    }
  }
  /**
   * Cleanup all services
   */
  cleanup() {
    /* istanbul ignore next */
    cov_12q35qcmyg().f[12]++;
    cov_12q35qcmyg().s[93]++;
    console.log('Cleaning up authentication services');
    /* istanbul ignore next */
    cov_12q35qcmyg().s[94]++;
    try {
      /* istanbul ignore next */
      cov_12q35qcmyg().s[95]++;
      session_service_1.sessionService.cleanup();
      /* istanbul ignore next */
      cov_12q35qcmyg().s[96]++;
      subscription_service_1.subscriptionService.cleanup();
      // OAuth and biometric services don't need cleanup
      // GDPR service is stateless
      /* istanbul ignore next */
      cov_12q35qcmyg().s[97]++;
      this.isInitialized = false;
      /* istanbul ignore next */
      cov_12q35qcmyg().s[98]++;
      this.initializationPromise = null;
    } catch (error) {
      /* istanbul ignore next */
      cov_12q35qcmyg().s[99]++;
      console.error('Cleanup error:', error);
    }
  }
  /**
   * Reset all services (for testing or troubleshooting)
   */
  async reset() {
    /* istanbul ignore next */
    cov_12q35qcmyg().f[13]++;
    cov_12q35qcmyg().s[100]++;
    console.log('Resetting authentication services');
    /* istanbul ignore next */
    cov_12q35qcmyg().s[101]++;
    try {
      /* istanbul ignore next */
      cov_12q35qcmyg().s[102]++;
      // Cleanup first
      this.cleanup();
      // Clear any cached data
      // Note: This doesn't clear user data, just service state
      /* istanbul ignore next */
      cov_12q35qcmyg().s[103]++;
      console.log('Authentication services reset completed');
    } catch (error) {
      /* istanbul ignore next */
      cov_12q35qcmyg().s[104]++;
      console.error('Reset error:', error);
    }
  }
}
/* istanbul ignore next */
cov_12q35qcmyg().s[105]++;
exports.AuthService = AuthService;
// Export singleton instance
/* istanbul ignore next */
cov_12q35qcmyg().s[106]++;
exports.authService = AuthService.getInstance();
// Convenience functions
/* istanbul ignore next */
cov_12q35qcmyg().s[107]++;
const initializeAuth = userId => {
  /* istanbul ignore next */
  cov_12q35qcmyg().f[14]++;
  cov_12q35qcmyg().s[108]++;
  return exports.authService.initialize(userId);
};
/* istanbul ignore next */
cov_12q35qcmyg().s[109]++;
exports.initializeAuth = initializeAuth;
/* istanbul ignore next */
cov_12q35qcmyg().s[110]++;
const getAuthCapabilities = () => {
  /* istanbul ignore next */
  cov_12q35qcmyg().f[15]++;
  cov_12q35qcmyg().s[111]++;
  return exports.authService.getCapabilities();
};
/* istanbul ignore next */
cov_12q35qcmyg().s[112]++;
exports.getAuthCapabilities = getAuthCapabilities;
/* istanbul ignore next */
cov_12q35qcmyg().s[113]++;
const checkAuthHealth = () => {
  /* istanbul ignore next */
  cov_12q35qcmyg().f[16]++;
  cov_12q35qcmyg().s[114]++;
  return exports.authService.healthCheck();
};
/* istanbul ignore next */
cov_12q35qcmyg().s[115]++;
exports.checkAuthHealth = checkAuthHealth;
/* istanbul ignore next */
cov_12q35qcmyg().s[116]++;
exports.default = exports.authService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,