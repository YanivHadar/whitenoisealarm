{"version":3,"names":["cov_12q35qcmyg","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","oauth_service_1","require","biometric_service_1","session_service_1","subscription_service_1","client_1","AuthService","instance","isInitialized","initializationPromise","constructor","getInstance","initialize","userId","getStatus","performInitialization","errors","console","log","oauthService","error","push","biometricService","sessionService","subscriptionService","services","oauth","biometric","session","subscription","gdpr","getCapabilities","biometricCaps","biometricTypes","getBiometricTypeName","availableTypes","oauthProviders","getAvailableProviders","subscriptionPlans","getSubscriptionPlans","map","p","subscriptionAvailable","length","gdprCompliant","healthCheck","serviceChecks","recommendations","sessionHealth","getHealthMetrics","status","issues","biometricValidation","validateSetup","isValid","subscriptionStatus","getSubscriptionStatus","isActive","supabase","from","select","limit","database","message","unhealthyServices","Object","values","filter","degradedServices","overall","system","onAppBackground","onAppForeground","checkSessionStatus","customerInfo","cleanup","reset","exports","authService","initializeAuth","getAuthCapabilities","checkAuthHealth","default"],"sources":["/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/services/auth-service.ts"],"sourcesContent":["/**\n * Authentication Service Coordinator for Alarm & White Noise App\n * \n * Central coordinator that ties together all authentication services\n * including OAuth, biometric, session management, and GDPR compliance.\n */\n\nimport { AppState } from 'react-native';\nimport { oauthService } from './oauth-service';\nimport { biometricService } from './biometric-service';\nimport { sessionService } from './session-service';\nimport { subscriptionService } from './subscription-service';\nimport { gdprService } from './gdpr-service';\nimport { supabase } from '../lib/supabase/client';\n\nexport interface AuthServiceStatus {\n  isInitialized: boolean;\n  services: {\n    oauth: boolean;\n    biometric: boolean;\n    session: boolean;\n    subscription: boolean;\n    gdpr: boolean;\n  };\n  errors: string[];\n}\n\nexport interface AuthServiceCapabilities {\n  biometricTypes: string[];\n  oauthProviders: string[];\n  subscriptionAvailable: boolean;\n  gdprCompliant: boolean;\n}\n\n/**\n * Authentication Service Coordinator Class\n */\nexport class AuthService {\n  private static instance: AuthService;\n  private isInitialized = false;\n  private initializationPromise: Promise<void> | null = null;\n\n  private constructor() {}\n\n  static getInstance(): AuthService {\n    if (!AuthService.instance) {\n      AuthService.instance = new AuthService();\n    }\n    return AuthService.instance;\n  }\n\n  /**\n   * Initialize all authentication services\n   */\n  async initialize(userId?: string): Promise<AuthServiceStatus> {\n    if (this.isInitialized) {\n      return this.getStatus();\n    }\n\n    if (this.initializationPromise) {\n      await this.initializationPromise;\n      return this.getStatus();\n    }\n\n    this.initializationPromise = this.performInitialization(userId);\n    await this.initializationPromise;\n    \n    this.isInitialized = true;\n    return this.getStatus();\n  }\n\n  /**\n   * Perform actual initialization\n   */\n  private async performInitialization(userId?: string): Promise<void> {\n    const errors: string[] = [];\n\n    console.log('Initializing authentication services...');\n\n    try {\n      // Initialize OAuth service\n      try {\n        await oauthService.initialize();\n        console.log('✅ OAuth service initialized');\n      } catch (error) {\n        console.error('❌ OAuth service initialization failed:', error);\n        errors.push('OAuth initialization failed');\n      }\n\n      // Initialize biometric service\n      try {\n        await biometricService.initialize();\n        console.log('✅ Biometric service initialized');\n      } catch (error) {\n        console.error('❌ Biometric service initialization failed:', error);\n        errors.push('Biometric initialization failed');\n      }\n\n      // Initialize session service\n      try {\n        await sessionService.initialize();\n        console.log('✅ Session service initialized');\n      } catch (error) {\n        console.error('❌ Session service initialization failed:', error);\n        errors.push('Session initialization failed');\n      }\n\n      // Initialize subscription service\n      try {\n        await subscriptionService.initialize(userId);\n        console.log('✅ Subscription service initialized');\n      } catch (error) {\n        console.error('❌ Subscription service initialization failed:', error);\n        errors.push('Subscription initialization failed');\n      }\n\n      console.log('Authentication services initialization completed');\n\n    } catch (error) {\n      console.error('Critical authentication service initialization error:', error);\n      errors.push('Critical initialization failure');\n    }\n  }\n\n  /**\n   * Get current service status\n   */\n  getStatus(): AuthServiceStatus {\n    return {\n      isInitialized: this.isInitialized,\n      services: {\n        oauth: true, // OAuth is always available\n        biometric: this.isInitialized,\n        session: this.isInitialized,\n        subscription: this.isInitialized,\n        gdpr: true, // GDPR service doesn't need initialization\n      },\n      errors: [], // Could track actual errors here\n    };\n  }\n\n  /**\n   * Get authentication capabilities\n   */\n  async getCapabilities(): Promise<AuthServiceCapabilities> {\n    try {\n      // Get biometric capabilities\n      const biometricCaps = await biometricService.getCapabilities();\n      const biometricTypes = biometricService.getBiometricTypeName(biometricCaps.availableTypes);\n\n      // Get OAuth providers\n      const oauthProviders = await oauthService.getAvailableProviders();\n\n      // Check subscription availability\n      const subscriptionPlans = await subscriptionService.getSubscriptionPlans();\n\n      return {\n        biometricTypes: [biometricTypes],\n        oauthProviders: oauthProviders.map(p => p.name),\n        subscriptionAvailable: subscriptionPlans.length > 0,\n        gdprCompliant: true,\n      };\n\n    } catch (error) {\n      console.error('Error getting auth capabilities:', error);\n      return {\n        biometricTypes: [],\n        oauthProviders: [],\n        subscriptionAvailable: false,\n        gdprCompliant: true,\n      };\n    }\n  }\n\n  /**\n   * Comprehensive health check\n   */\n  async healthCheck(): Promise<{\n    overall: 'healthy' | 'degraded' | 'unhealthy';\n    services: Record<string, { status: string; issues: string[] }>;\n    recommendations: string[];\n  }> {\n    const serviceChecks: Record<string, { status: string; issues: string[] }> = {};\n    const recommendations: string[] = [];\n\n    try {\n      // Check session health\n      const sessionHealth = await sessionService.getHealthMetrics();\n      serviceChecks.session = {\n        status: sessionHealth.status,\n        issues: sessionHealth.issues,\n      };\n      recommendations.push(...sessionHealth.recommendations);\n\n      // Check biometric setup\n      const biometricValidation = await biometricService.validateSetup();\n      serviceChecks.biometric = {\n        status: biometricValidation.isValid ? 'healthy' : 'degraded',\n        issues: biometricValidation.issues,\n      };\n      recommendations.push(...biometricValidation.recommendations);\n\n      // Check subscription status\n      const subscriptionStatus = await subscriptionService.getSubscriptionStatus();\n      serviceChecks.subscription = {\n        status: subscriptionStatus.isActive ? 'healthy' : 'degraded',\n        issues: subscriptionStatus.isActive ? [] : ['Subscription inactive'],\n      };\n\n      // Check Supabase connection\n      try {\n        const { error } = await supabase.from('users').select('id').limit(1);\n        serviceChecks.database = {\n          status: error ? 'unhealthy' : 'healthy',\n          issues: error ? [error.message] : [],\n        };\n      } catch (error: any) {\n        serviceChecks.database = {\n          status: 'unhealthy',\n          issues: [error.message || 'Database connection failed'],\n        };\n      }\n\n      // Determine overall health\n      const unhealthyServices = Object.values(serviceChecks).filter(s => s.status === 'unhealthy');\n      const degradedServices = Object.values(serviceChecks).filter(s => s.status === 'degraded');\n\n      let overall: 'healthy' | 'degraded' | 'unhealthy' = 'healthy';\n      if (unhealthyServices.length > 0) {\n        overall = 'unhealthy';\n      } else if (degradedServices.length > 0) {\n        overall = 'degraded';\n      }\n\n      return {\n        overall,\n        services: serviceChecks,\n        recommendations,\n      };\n\n    } catch (error) {\n      console.error('Health check error:', error);\n      return {\n        overall: 'unhealthy',\n        services: {\n          system: {\n            status: 'unhealthy',\n            issues: ['Health check system failure'],\n          },\n        },\n        recommendations: ['Restart the application'],\n      };\n    }\n  }\n\n  /**\n   * Handle app going to background\n   */\n  async onAppBackground(): Promise<void> {\n    try {\n      console.log('Auth service handling app background');\n\n      // Session service handles its own background logic\n      // OAuth service doesn't need background handling\n      // Subscription service handles background updates via RevenueCat\n\n    } catch (error) {\n      console.error('Background handling error:', error);\n    }\n  }\n\n  /**\n   * Handle app coming to foreground\n   */\n  async onAppForeground(): Promise<void> {\n    try {\n      console.log('Auth service handling app foreground');\n\n      // Check session validity\n      await sessionService.checkSessionStatus();\n\n      // Refresh subscription status\n      const customerInfo = await subscriptionService.getSubscriptionStatus();\n      console.log('Subscription status refreshed:', customerInfo.isActive);\n\n    } catch (error) {\n      console.error('Foreground handling error:', error);\n    }\n  }\n\n  /**\n   * Cleanup all services\n   */\n  cleanup(): void {\n    console.log('Cleaning up authentication services');\n\n    try {\n      sessionService.cleanup();\n      subscriptionService.cleanup();\n      // OAuth and biometric services don't need cleanup\n      // GDPR service is stateless\n\n      this.isInitialized = false;\n      this.initializationPromise = null;\n\n    } catch (error) {\n      console.error('Cleanup error:', error);\n    }\n  }\n\n  /**\n   * Reset all services (for testing or troubleshooting)\n   */\n  async reset(): Promise<void> {\n    console.log('Resetting authentication services');\n\n    try {\n      // Cleanup first\n      this.cleanup();\n\n      // Clear any cached data\n      // Note: This doesn't clear user data, just service state\n\n      console.log('Authentication services reset completed');\n\n    } catch (error) {\n      console.error('Reset error:', error);\n    }\n  }\n}\n\n// Export singleton instance\nexport const authService = AuthService.getInstance();\n\n// Convenience functions\nexport const initializeAuth = (userId?: string) => authService.initialize(userId);\nexport const getAuthCapabilities = () => authService.getCapabilities();\nexport const checkAuthHealth = () => authService.healthCheck();\n\nexport default authService;"],"mappings":"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","ignoreList":[]}