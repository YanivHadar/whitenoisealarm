4246c2599d3b2f1d643ff8492e34a27f
"use strict";

/* istanbul ignore next */
function cov_xti7xes83() {
  var path = "/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/screens/alarms/EditAlarmScreen.tsx";
  var hash = "4563322690f34398a6fc4f92b7f78df2b1bc8ec4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/screens/alarms/EditAlarmScreen.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 50
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 32
        }
      },
      "4": {
        start: {
          line: 12,
          column: 23
        },
        end: {
          line: 12,
          column: 46
        }
      },
      "5": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 75
        }
      },
      "6": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 15,
          column: 58
        }
      },
      "7": {
        start: {
          line: 16,
          column: 24
        },
        end: {
          line: 94,
          column: 1
        }
      },
      "8": {
        start: {
          line: 17,
          column: 22
        },
        end: {
          line: 17,
          column: 53
        }
      },
      "9": {
        start: {
          line: 18,
          column: 24
        },
        end: {
          line: 18,
          column: 36
        }
      },
      "10": {
        start: {
          line: 19,
          column: 34
        },
        end: {
          line: 19,
          column: 61
        }
      },
      "11": {
        start: {
          line: 20,
          column: 38
        },
        end: {
          line: 20,
          column: 65
        }
      },
      "12": {
        start: {
          line: 21,
          column: 30
        },
        end: {
          line: 21,
          column: 57
        }
      },
      "13": {
        start: {
          line: 22,
          column: 19
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "14": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 25,
          column: 18
        }
      },
      "15": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 24
        }
      },
      "16": {
        start: {
          line: 26,
          column: 26
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "17": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "18": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 29
        }
      },
      "19": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 27
        }
      },
      "20": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 68
        }
      },
      "21": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 68
        }
      },
      "22": {
        start: {
          line: 35,
          column: 41
        },
        end: {
          line: 35,
          column: 66
        }
      },
      "23": {
        start: {
          line: 37,
          column: 34
        },
        end: {
          line: 61,
          column: 13
        }
      },
      "24": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 40
        }
      },
      "25": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 62
        }
      },
      "26": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 69
        }
      },
      "27": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 77,
          column: 15
        }
      },
      "28": {
        start: {
          line: 71,
          column: 35
        },
        end: {
          line: 71,
          column: 54
        }
      },
      "29": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 30
        }
      },
      "30": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 86,
          column: 5
        }
      },
      "31": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 549
        }
      },
      "32": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "33": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 1069
        }
      },
      "34": {
        start: {
          line: 89,
          column: 1010
        },
        end: {
          line: 89,
          column: 1029
        }
      },
      "35": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 138
        }
      },
      "36": {
        start: {
          line: 95,
          column: 0
        },
        end: {
          line: 95,
          column: 42
        }
      },
      "37": {
        start: {
          line: 96,
          column: 25
        },
        end: {
          line: 108,
          column: 1
        }
      },
      "38": {
        start: {
          line: 98,
          column: 22
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "39": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 107,
          column: 119
        }
      },
      "40": {
        start: {
          line: 109,
          column: 21
        },
        end: {
          line: 190,
          column: 2
        }
      },
      "41": {
        start: {
          line: 109,
          column: 32
        },
        end: {
          line: 190,
          column: 2
        }
      },
      "42": {
        start: {
          line: 191,
          column: 0
        },
        end: {
          line: 191,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 16,
            column: 25
          }
        },
        loc: {
          start: {
            line: 16,
            column: 51
          },
          end: {
            line: 94,
            column: 1
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 23,
            column: 28
          }
        },
        loc: {
          start: {
            line: 23,
            column: 33
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 26,
            column: 27
          }
        },
        loc: {
          start: {
            line: 26,
            column: 38
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 30
          },
          end: {
            line: 35,
            column: 31
          }
        },
        loc: {
          start: {
            line: 35,
            column: 41
          },
          end: {
            line: 35,
            column: 66
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 71,
            column: 29
          },
          end: {
            line: 71,
            column: 30
          }
        },
        loc: {
          start: {
            line: 71,
            column: 35
          },
          end: {
            line: 71,
            column: 54
          }
        },
        line: 71
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 89,
            column: 1004
          },
          end: {
            line: 89,
            column: 1005
          }
        },
        loc: {
          start: {
            line: 89,
            column: 1010
          },
          end: {
            line: 89,
            column: 1029
          }
        },
        line: 89
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 96,
            column: 25
          },
          end: {
            line: 96,
            column: 26
          }
        },
        loc: {
          start: {
            line: 96,
            column: 74
          },
          end: {
            line: 108,
            column: 1
          }
        },
        line: 96
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 109,
            column: 21
          },
          end: {
            line: 109,
            column: 22
          }
        },
        loc: {
          start: {
            line: 109,
            column: 32
          },
          end: {
            line: 190,
            column: 2
          }
        },
        line: 109
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "1": {
        loc: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "2": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 88,
            column: 27
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: 88,
            column: 17
          },
          end: {
            line: 88,
            column: 27
          }
        }],
        line: 88
      },
      "3": {
        loc: {
          start: {
            line: 89,
            column: 483
          },
          end: {
            line: 89,
            column: 532
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 483
          },
          end: {
            line: 89,
            column: 488
          }
        }, {
          start: {
            line: 89,
            column: 492
          },
          end: {
            line: 89,
            column: 532
          }
        }],
        line: 89
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/screens/alarms/EditAlarmScreen.tsx",
      mappings: "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",
      names: [],
      sources: ["/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/screens/alarms/EditAlarmScreen.tsx"],
      sourcesContent: ["/**\n * Edit Alarm Screen\n * \n * Extends CreateAlarm functionality with pre-populated data\n * and specialized editing workflows for sleep optimization.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  View, \n  Text, \n  StyleSheet, \n  SafeAreaView, \n  ActivityIndicator,\n  Alert \n} from 'react-native';\nimport { AlarmStackScreenProps } from '../../types/navigation';\nimport { useTheme } from '../../components/providers/ThemeProvider';\nimport { AlarmFormData } from '../../types/alarm';\n// Import the main CreateAlarmScreen component to reuse logic\nimport { CreateAlarmScreen } from './CreateAlarmScreen';\n\ntype EditAlarmScreenProps = AlarmStackScreenProps<'EditAlarm'>;\n\nexport const EditAlarmScreen: React.FC<EditAlarmScreenProps> = ({ navigation, route }) => {\n  const { theme } = useTheme();\n  const { alarmId } = route.params;\n  \n  const [loading, setLoading] = useState(true);\n  const [alarmData, setAlarmData] = useState<AlarmFormData | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  \n  const styles = createStyles(theme);\n\n  useEffect(() => {\n    loadAlarmData();\n  }, [alarmId]);\n\n  const loadAlarmData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // TODO: Replace with actual alarm service call\n      // const alarm = await AlarmService.getById(alarmId);\n      \n      // Mock data loading - in production this would come from the alarm service\n      console.log('Loading alarm data for editing:', alarmId);\n      \n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Mock alarm data - in production this would come from API\n      const mockAlarmData: AlarmFormData = {\n        name: 'Morning Alarm',\n        time: '07:30',\n        enabled: true,\n        repeat_pattern: 'weekdays',\n        repeat_days: [1, 2, 3, 4, 5], // Monday to Friday\n        \n        // Audio settings\n        audio_file_url: 'https://example.com/gentle-wake.mp3',\n        audio_output: 'auto',\n        volume: 0.8,\n        \n        // Behavior settings\n        vibration_enabled: true,\n        snooze_enabled: true,\n        snooze_duration: 10,\n        snooze_count_limit: 3,\n        \n        // White noise integration\n        white_noise_enabled: true,\n        white_noise_file_url: 'https://example.com/rain.mp3',\n        white_noise_category: 'nature',\n        white_noise_volume: 0.6,\n        white_noise_duration: 480, // 8 hours\n        \n        // Audio effects\n        fade_in_duration: 5,\n        fade_out_duration: 3,\n      };\n\n      setAlarmData(mockAlarmData);\n      \n    } catch (error) {\n      console.error('Error loading alarm data:', error);\n      setError('Failed to load alarm data. Please try again.');\n      \n      Alert.alert(\n        'Loading Error',\n        'Unable to load alarm data. Would you like to try again or go back?',\n        [\n          {\n            text: 'Go Back',\n            style: 'cancel',\n            onPress: () => navigation.goBack()\n          },\n          {\n            text: 'Retry',\n            onPress: loadAlarmData\n          }\n        ]\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Loading state\n  if (loading) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n          <Text style={styles.loadingText}>Loading alarm settings...</Text>\n          <Text style={styles.loadingSubtext}>\n            Fetching your alarm configuration\n          </Text>\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n  // Error state\n  if (error || !alarmData) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.errorContainer}>\n          <Text style={styles.errorIcon}>\u26A0\uFE0F</Text>\n          <Text style={styles.errorTitle}>Unable to Load Alarm</Text>\n          <Text style={styles.errorText}>\n            {error || 'The alarm data could not be retrieved.'}\n          </Text>\n          <View style={styles.errorButtons}>\n            <View style={styles.buttonContainer}>\n              <Text \n                style={styles.retryButton}\n                onPress={loadAlarmData}\n              >\n                Try Again\n              </Text>\n            </View>\n            <View style={styles.buttonContainer}>\n              <Text \n                style={styles.backButton}\n                onPress={() => navigation.goBack()}\n              >\n                Go Back\n              </Text>\n            </View>\n          </View>\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n  // Render the CreateAlarmScreen component with pre-populated data\n  // This is a specialized approach that reuses the comprehensive form logic\n  return (\n    <EditAlarmWrapper\n      navigation={navigation}\n      route={route}\n      initialData={alarmData}\n      alarmId={alarmId}\n    />\n  );\n};\n\n// Wrapper component that handles the edit-specific logic while reusing CreateAlarmScreen\ninterface EditAlarmWrapperProps {\n  navigation: any;\n  route: any;\n  initialData: AlarmFormData;\n  alarmId: string;\n}\n\nconst EditAlarmWrapper: React.FC<EditAlarmWrapperProps> = ({ \n  navigation, \n  route, \n  initialData, \n  alarmId \n}) => {\n  // Override the route params to include the initial data\n  const editRoute = {\n    ...route,\n    params: {\n      ...route.params,\n      alarmId,\n      initialData // Pass the loaded data to CreateAlarmScreen\n    }\n  };\n\n  // Use the CreateAlarmScreen component with edit-specific behavior\n  return <CreateAlarmScreen navigation={navigation} route={editRoute} />;\n};\n\nconst createStyles = (theme: any) => StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: theme.spacing[8],\n  },\n  loadingText: {\n    fontSize: theme.fontSize.lg,\n    fontWeight: theme.fontWeight.semibold,\n    color: theme.colors.text,\n    marginTop: theme.spacing[4],\n    textAlign: 'center',\n  },\n  loadingSubtext: {\n    fontSize: theme.fontSize.base,\n    color: theme.colors.textSecondary,\n    marginTop: theme.spacing[2],\n    textAlign: 'center',\n    lineHeight: theme.lineHeight.relaxed * theme.fontSize.base,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: theme.spacing[8],\n  },\n  errorIcon: {\n    fontSize: 64,\n    marginBottom: theme.spacing[4],\n  },\n  errorTitle: {\n    fontSize: theme.fontSize.xl,\n    fontWeight: theme.fontWeight.bold,\n    color: theme.colors.text,\n    marginBottom: theme.spacing[3],\n    textAlign: 'center',\n  },\n  errorText: {\n    fontSize: theme.fontSize.base,\n    color: theme.colors.textSecondary,\n    textAlign: 'center',\n    lineHeight: theme.lineHeight.relaxed * theme.fontSize.base,\n    marginBottom: theme.spacing[6],\n  },\n  errorButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    maxWidth: 300,\n  },\n  buttonContainer: {\n    flex: 1,\n    marginHorizontal: theme.spacing[2],\n  },\n  retryButton: {\n    backgroundColor: theme.colors.primary,\n    color: '#FFFFFF',\n    fontSize: theme.fontSize.base,\n    fontWeight: theme.fontWeight.semibold,\n    textAlign: 'center',\n    padding: theme.spacing[4],\n    borderRadius: theme.borderRadius.lg,\n    overflow: 'hidden',\n  },\n  backButton: {\n    backgroundColor: theme.colors.card,\n    color: theme.colors.text,\n    fontSize: theme.fontSize.base,\n    fontWeight: theme.fontWeight.semibold,\n    textAlign: 'center',\n    padding: theme.spacing[4],\n    borderRadius: theme.borderRadius.lg,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    overflow: 'hidden',\n  },\n});\n\nexport default EditAlarmScreen;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4563322690f34398a6fc4f92b7f78df2b1bc8ec4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_xti7xes83 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_xti7xes83();
cov_xti7xes83().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_xti7xes83().s[1]++;
exports.EditAlarmScreen = void 0;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_xti7xes83().s[2]++, require("react/jsx-runtime"));
/**
 * Edit Alarm Screen
 *
 * Extends CreateAlarm functionality with pre-populated data
 * and specialized editing workflows for sleep optimization.
 */
const react_1 =
/* istanbul ignore next */
(cov_xti7xes83().s[3]++, require("react"));
const react_native_1 =
/* istanbul ignore next */
(cov_xti7xes83().s[4]++, require("react-native"));
const ThemeProvider_1 =
/* istanbul ignore next */
(cov_xti7xes83().s[5]++, require("../../components/providers/ThemeProvider"));
// Import the main CreateAlarmScreen component to reuse logic
const CreateAlarmScreen_1 =
/* istanbul ignore next */
(cov_xti7xes83().s[6]++, require("./CreateAlarmScreen"));
/* istanbul ignore next */
cov_xti7xes83().s[7]++;
const EditAlarmScreen = ({
  navigation,
  route
}) => {
  /* istanbul ignore next */
  cov_xti7xes83().f[0]++;
  const {
    theme
  } =
  /* istanbul ignore next */
  (cov_xti7xes83().s[8]++, (0, ThemeProvider_1.useTheme)());
  const {
    alarmId
  } =
  /* istanbul ignore next */
  (cov_xti7xes83().s[9]++, route.params);
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_xti7xes83().s[10]++, (0, react_1.useState)(true));
  const [alarmData, setAlarmData] =
  /* istanbul ignore next */
  (cov_xti7xes83().s[11]++, (0, react_1.useState)(null));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_xti7xes83().s[12]++, (0, react_1.useState)(null));
  const styles =
  /* istanbul ignore next */
  (cov_xti7xes83().s[13]++, createStyles(theme));
  /* istanbul ignore next */
  cov_xti7xes83().s[14]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_xti7xes83().f[1]++;
    cov_xti7xes83().s[15]++;
    loadAlarmData();
  }, [alarmId]);
  /* istanbul ignore next */
  cov_xti7xes83().s[16]++;
  const loadAlarmData = async () => {
    /* istanbul ignore next */
    cov_xti7xes83().f[2]++;
    cov_xti7xes83().s[17]++;
    try {
      /* istanbul ignore next */
      cov_xti7xes83().s[18]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_xti7xes83().s[19]++;
      setError(null);
      // TODO: Replace with actual alarm service call
      // const alarm = await AlarmService.getById(alarmId);
      // Mock data loading - in production this would come from the alarm service
      /* istanbul ignore next */
      cov_xti7xes83().s[20]++;
      console.log('Loading alarm data for editing:', alarmId);
      // Simulate API call
      /* istanbul ignore next */
      cov_xti7xes83().s[21]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_xti7xes83().f[3]++;
        cov_xti7xes83().s[22]++;
        return setTimeout(resolve, 1000);
      });
      // Mock alarm data - in production this would come from API
      const mockAlarmData =
      /* istanbul ignore next */
      (cov_xti7xes83().s[23]++, {
        name: 'Morning Alarm',
        time: '07:30',
        enabled: true,
        repeat_pattern: 'weekdays',
        repeat_days: [1, 2, 3, 4, 5],
        // Monday to Friday
        // Audio settings
        audio_file_url: 'https://example.com/gentle-wake.mp3',
        audio_output: 'auto',
        volume: 0.8,
        // Behavior settings
        vibration_enabled: true,
        snooze_enabled: true,
        snooze_duration: 10,
        snooze_count_limit: 3,
        // White noise integration
        white_noise_enabled: true,
        white_noise_file_url: 'https://example.com/rain.mp3',
        white_noise_category: 'nature',
        white_noise_volume: 0.6,
        white_noise_duration: 480,
        // 8 hours
        // Audio effects
        fade_in_duration: 5,
        fade_out_duration: 3
      });
      /* istanbul ignore next */
      cov_xti7xes83().s[24]++;
      setAlarmData(mockAlarmData);
    } catch (error) {
      /* istanbul ignore next */
      cov_xti7xes83().s[25]++;
      console.error('Error loading alarm data:', error);
      /* istanbul ignore next */
      cov_xti7xes83().s[26]++;
      setError('Failed to load alarm data. Please try again.');
      /* istanbul ignore next */
      cov_xti7xes83().s[27]++;
      react_native_1.Alert.alert('Loading Error', 'Unable to load alarm data. Would you like to try again or go back?', [{
        text: 'Go Back',
        style: 'cancel',
        onPress: () => {
          /* istanbul ignore next */
          cov_xti7xes83().f[4]++;
          cov_xti7xes83().s[28]++;
          return navigation.goBack();
        }
      }, {
        text: 'Retry',
        onPress: loadAlarmData
      }]);
    } finally {
      /* istanbul ignore next */
      cov_xti7xes83().s[29]++;
      setLoading(false);
    }
  };
  // Loading state
  /* istanbul ignore next */
  cov_xti7xes83().s[30]++;
  if (loading) {
    /* istanbul ignore next */
    cov_xti7xes83().b[0][0]++;
    cov_xti7xes83().s[31]++;
    return (0, jsx_runtime_1.jsx)(react_native_1.SafeAreaView, {
      style: styles.container,
      children: (0, jsx_runtime_1.jsxs)(react_native_1.View, {
        style: styles.loadingContainer,
        children: [(0, jsx_runtime_1.jsx)(react_native_1.ActivityIndicator, {
          size: "large",
          color: theme.colors.primary
        }), (0, jsx_runtime_1.jsx)(react_native_1.Text, {
          style: styles.loadingText,
          children: "Loading alarm settings..."
        }), (0, jsx_runtime_1.jsx)(react_native_1.Text, {
          style: styles.loadingSubtext,
          children: "Fetching your alarm configuration"
        })]
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_xti7xes83().b[0][1]++;
  }
  // Error state
  cov_xti7xes83().s[32]++;
  if (
  /* istanbul ignore next */
  (cov_xti7xes83().b[2][0]++, error) ||
  /* istanbul ignore next */
  (cov_xti7xes83().b[2][1]++, !alarmData)) {
    /* istanbul ignore next */
    cov_xti7xes83().b[1][0]++;
    cov_xti7xes83().s[33]++;
    return (0, jsx_runtime_1.jsx)(react_native_1.SafeAreaView, {
      style: styles.container,
      children: (0, jsx_runtime_1.jsxs)(react_native_1.View, {
        style: styles.errorContainer,
        children: [(0, jsx_runtime_1.jsx)(react_native_1.Text, {
          style: styles.errorIcon,
          children: "\u26A0\uFE0F"
        }), (0, jsx_runtime_1.jsx)(react_native_1.Text, {
          style: styles.errorTitle,
          children: "Unable to Load Alarm"
        }), (0, jsx_runtime_1.jsx)(react_native_1.Text, {
          style: styles.errorText,
          children:
          /* istanbul ignore next */
          (cov_xti7xes83().b[3][0]++, error) ||
          /* istanbul ignore next */
          (cov_xti7xes83().b[3][1]++, 'The alarm data could not be retrieved.')
        }), (0, jsx_runtime_1.jsxs)(react_native_1.View, {
          style: styles.errorButtons,
          children: [(0, jsx_runtime_1.jsx)(react_native_1.View, {
            style: styles.buttonContainer,
            children: (0, jsx_runtime_1.jsx)(react_native_1.Text, {
              style: styles.retryButton,
              onPress: loadAlarmData,
              children: "Try Again"
            })
          }), (0, jsx_runtime_1.jsx)(react_native_1.View, {
            style: styles.buttonContainer,
            children: (0, jsx_runtime_1.jsx)(react_native_1.Text, {
              style: styles.backButton,
              onPress: () => {
                /* istanbul ignore next */
                cov_xti7xes83().f[5]++;
                cov_xti7xes83().s[34]++;
                return navigation.goBack();
              },
              children: "Go Back"
            })
          })]
        })]
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_xti7xes83().b[1][1]++;
  }
  // Render the CreateAlarmScreen component with pre-populated data
  // This is a specialized approach that reuses the comprehensive form logic
  cov_xti7xes83().s[35]++;
  return (0, jsx_runtime_1.jsx)(EditAlarmWrapper, {
    navigation: navigation,
    route: route,
    initialData: alarmData,
    alarmId: alarmId
  });
};
/* istanbul ignore next */
cov_xti7xes83().s[36]++;
exports.EditAlarmScreen = EditAlarmScreen;
/* istanbul ignore next */
cov_xti7xes83().s[37]++;
const EditAlarmWrapper = ({
  navigation,
  route,
  initialData,
  alarmId
}) => {
  /* istanbul ignore next */
  cov_xti7xes83().f[6]++;
  // Override the route params to include the initial data
  const editRoute =
  /* istanbul ignore next */
  (cov_xti7xes83().s[38]++, {
    ...route,
    params: {
      ...route.params,
      alarmId,
      initialData // Pass the loaded data to CreateAlarmScreen
    }
  });
  // Use the CreateAlarmScreen component with edit-specific behavior
  /* istanbul ignore next */
  cov_xti7xes83().s[39]++;
  return (0, jsx_runtime_1.jsx)(CreateAlarmScreen_1.CreateAlarmScreen, {
    navigation: navigation,
    route: editRoute
  });
};
/* istanbul ignore next */
cov_xti7xes83().s[40]++;
const createStyles = theme => {
  /* istanbul ignore next */
  cov_xti7xes83().f[7]++;
  cov_xti7xes83().s[41]++;
  return react_native_1.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: theme.colors.background
    },
    loadingContainer: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center',
      padding: theme.spacing[8]
    },
    loadingText: {
      fontSize: theme.fontSize.lg,
      fontWeight: theme.fontWeight.semibold,
      color: theme.colors.text,
      marginTop: theme.spacing[4],
      textAlign: 'center'
    },
    loadingSubtext: {
      fontSize: theme.fontSize.base,
      color: theme.colors.textSecondary,
      marginTop: theme.spacing[2],
      textAlign: 'center',
      lineHeight: theme.lineHeight.relaxed * theme.fontSize.base
    },
    errorContainer: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center',
      padding: theme.spacing[8]
    },
    errorIcon: {
      fontSize: 64,
      marginBottom: theme.spacing[4]
    },
    errorTitle: {
      fontSize: theme.fontSize.xl,
      fontWeight: theme.fontWeight.bold,
      color: theme.colors.text,
      marginBottom: theme.spacing[3],
      textAlign: 'center'
    },
    errorText: {
      fontSize: theme.fontSize.base,
      color: theme.colors.textSecondary,
      textAlign: 'center',
      lineHeight: theme.lineHeight.relaxed * theme.fontSize.base,
      marginBottom: theme.spacing[6]
    },
    errorButtons: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      width: '100%',
      maxWidth: 300
    },
    buttonContainer: {
      flex: 1,
      marginHorizontal: theme.spacing[2]
    },
    retryButton: {
      backgroundColor: theme.colors.primary,
      color: '#FFFFFF',
      fontSize: theme.fontSize.base,
      fontWeight: theme.fontWeight.semibold,
      textAlign: 'center',
      padding: theme.spacing[4],
      borderRadius: theme.borderRadius.lg,
      overflow: 'hidden'
    },
    backButton: {
      backgroundColor: theme.colors.card,
      color: theme.colors.text,
      fontSize: theme.fontSize.base,
      fontWeight: theme.fontWeight.semibold,
      textAlign: 'center',
      padding: theme.spacing[4],
      borderRadius: theme.borderRadius.lg,
      borderWidth: 1,
      borderColor: theme.colors.border,
      overflow: 'hidden'
    }
  });
};
/* istanbul ignore next */
cov_xti7xes83().s[42]++;
exports.default = exports.EditAlarmScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfeHRpN3hlczgzIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwicmVhY3RfMSIsInJlcXVpcmUiLCJyZWFjdF9uYXRpdmVfMSIsIlRoZW1lUHJvdmlkZXJfMSIsIkNyZWF0ZUFsYXJtU2NyZWVuXzEiLCJFZGl0QWxhcm1TY3JlZW4iLCJuYXZpZ2F0aW9uIiwicm91dGUiLCJmIiwidGhlbWUiLCJ1c2VUaGVtZSIsImFsYXJtSWQiLCJwYXJhbXMiLCJsb2FkaW5nIiwic2V0TG9hZGluZyIsInVzZVN0YXRlIiwiYWxhcm1EYXRhIiwic2V0QWxhcm1EYXRhIiwiZXJyb3IiLCJzZXRFcnJvciIsInN0eWxlcyIsImNyZWF0ZVN0eWxlcyIsInVzZUVmZmVjdCIsImxvYWRBbGFybURhdGEiLCJjb25zb2xlIiwibG9nIiwiUHJvbWlzZSIsInJlc29sdmUiLCJzZXRUaW1lb3V0IiwibW9ja0FsYXJtRGF0YSIsIm5hbWUiLCJ0aW1lIiwiZW5hYmxlZCIsInJlcGVhdF9wYXR0ZXJuIiwicmVwZWF0X2RheXMiLCJhdWRpb19maWxlX3VybCIsImF1ZGlvX291dHB1dCIsInZvbHVtZSIsInZpYnJhdGlvbl9lbmFibGVkIiwic25vb3plX2VuYWJsZWQiLCJzbm9vemVfZHVyYXRpb24iLCJzbm9vemVfY291bnRfbGltaXQiLCJ3aGl0ZV9ub2lzZV9lbmFibGVkIiwid2hpdGVfbm9pc2VfZmlsZV91cmwiLCJ3aGl0ZV9ub2lzZV9jYXRlZ29yeSIsIndoaXRlX25vaXNlX3ZvbHVtZSIsIndoaXRlX25vaXNlX2R1cmF0aW9uIiwiZmFkZV9pbl9kdXJhdGlvbiIsImZhZGVfb3V0X2R1cmF0aW9uIiwiQWxlcnQiLCJhbGVydCIsInRleHQiLCJzdHlsZSIsIm9uUHJlc3MiLCJnb0JhY2siLCJiIiwianN4X3J1bnRpbWVfMSIsImpzeCIsIlNhZmVBcmVhVmlldyIsImNvbnRhaW5lciIsImNoaWxkcmVuIiwianN4cyIsIlZpZXciLCJsb2FkaW5nQ29udGFpbmVyIiwiQWN0aXZpdHlJbmRpY2F0b3IiLCJzaXplIiwiY29sb3IiLCJjb2xvcnMiLCJwcmltYXJ5IiwiVGV4dCIsImxvYWRpbmdUZXh0IiwibG9hZGluZ1N1YnRleHQiLCJlcnJvckNvbnRhaW5lciIsImVycm9ySWNvbiIsImVycm9yVGl0bGUiLCJlcnJvclRleHQiLCJlcnJvckJ1dHRvbnMiLCJidXR0b25Db250YWluZXIiLCJyZXRyeUJ1dHRvbiIsImJhY2tCdXR0b24iLCJFZGl0QWxhcm1XcmFwcGVyIiwiaW5pdGlhbERhdGEiLCJleHBvcnRzIiwiZWRpdFJvdXRlIiwiQ3JlYXRlQWxhcm1TY3JlZW4iLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiZmxleCIsImJhY2tncm91bmRDb2xvciIsImJhY2tncm91bmQiLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiLCJwYWRkaW5nIiwic3BhY2luZyIsImZvbnRTaXplIiwibGciLCJmb250V2VpZ2h0Iiwic2VtaWJvbGQiLCJtYXJnaW5Ub3AiLCJ0ZXh0QWxpZ24iLCJiYXNlIiwidGV4dFNlY29uZGFyeSIsImxpbmVIZWlnaHQiLCJyZWxheGVkIiwibWFyZ2luQm90dG9tIiwieGwiLCJib2xkIiwiZmxleERpcmVjdGlvbiIsIndpZHRoIiwibWF4V2lkdGgiLCJtYXJnaW5Ib3Jpem9udGFsIiwiYm9yZGVyUmFkaXVzIiwib3ZlcmZsb3ciLCJjYXJkIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJDb2xvciIsImJvcmRlciIsImRlZmF1bHQiXSwic291cmNlcyI6WyIvVXNlcnMveWFuaXZoYWRhci9EZXNrdG9wL1doaXRlIE5vaXNlIEFsYXJtL0FsYXJtV2hpdGVOb2lzZUFwcC9zcmMvc2NyZWVucy9hbGFybXMvRWRpdEFsYXJtU2NyZWVuLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEVkaXQgQWxhcm0gU2NyZWVuXG4gKiBcbiAqIEV4dGVuZHMgQ3JlYXRlQWxhcm0gZnVuY3Rpb25hbGl0eSB3aXRoIHByZS1wb3B1bGF0ZWQgZGF0YVxuICogYW5kIHNwZWNpYWxpemVkIGVkaXRpbmcgd29ya2Zsb3dzIGZvciBzbGVlcCBvcHRpbWl6YXRpb24uXG4gKi9cblxuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBcbiAgVmlldywgXG4gIFRleHQsIFxuICBTdHlsZVNoZWV0LCBcbiAgU2FmZUFyZWFWaWV3LCBcbiAgQWN0aXZpdHlJbmRpY2F0b3IsXG4gIEFsZXJ0IFxufSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgQWxhcm1TdGFja1NjcmVlblByb3BzIH0gZnJvbSAnLi4vLi4vdHlwZXMvbmF2aWdhdGlvbic7XG5pbXBvcnQgeyB1c2VUaGVtZSB9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvcHJvdmlkZXJzL1RoZW1lUHJvdmlkZXInO1xuaW1wb3J0IHsgQWxhcm1Gb3JtRGF0YSB9IGZyb20gJy4uLy4uL3R5cGVzL2FsYXJtJztcbi8vIEltcG9ydCB0aGUgbWFpbiBDcmVhdGVBbGFybVNjcmVlbiBjb21wb25lbnQgdG8gcmV1c2UgbG9naWNcbmltcG9ydCB7IENyZWF0ZUFsYXJtU2NyZWVuIH0gZnJvbSAnLi9DcmVhdGVBbGFybVNjcmVlbic7XG5cbnR5cGUgRWRpdEFsYXJtU2NyZWVuUHJvcHMgPSBBbGFybVN0YWNrU2NyZWVuUHJvcHM8J0VkaXRBbGFybSc+O1xuXG5leHBvcnQgY29uc3QgRWRpdEFsYXJtU2NyZWVuOiBSZWFjdC5GQzxFZGl0QWxhcm1TY3JlZW5Qcm9wcz4gPSAoeyBuYXZpZ2F0aW9uLCByb3V0ZSB9KSA9PiB7XG4gIGNvbnN0IHsgdGhlbWUgfSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IHsgYWxhcm1JZCB9ID0gcm91dGUucGFyYW1zO1xuICBcbiAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFthbGFybURhdGEsIHNldEFsYXJtRGF0YV0gPSB1c2VTdGF0ZTxBbGFybUZvcm1EYXRhIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG4gIFxuICBjb25zdCBzdHlsZXMgPSBjcmVhdGVTdHlsZXModGhlbWUpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgbG9hZEFsYXJtRGF0YSgpO1xuICB9LCBbYWxhcm1JZF0pO1xuXG4gIGNvbnN0IGxvYWRBbGFybURhdGEgPSBhc3luYyAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIHNldExvYWRpbmcodHJ1ZSk7XG4gICAgICBzZXRFcnJvcihudWxsKTtcblxuICAgICAgLy8gVE9ETzogUmVwbGFjZSB3aXRoIGFjdHVhbCBhbGFybSBzZXJ2aWNlIGNhbGxcbiAgICAgIC8vIGNvbnN0IGFsYXJtID0gYXdhaXQgQWxhcm1TZXJ2aWNlLmdldEJ5SWQoYWxhcm1JZCk7XG4gICAgICBcbiAgICAgIC8vIE1vY2sgZGF0YSBsb2FkaW5nIC0gaW4gcHJvZHVjdGlvbiB0aGlzIHdvdWxkIGNvbWUgZnJvbSB0aGUgYWxhcm0gc2VydmljZVxuICAgICAgY29uc29sZS5sb2coJ0xvYWRpbmcgYWxhcm0gZGF0YSBmb3IgZWRpdGluZzonLCBhbGFybUlkKTtcbiAgICAgIFxuICAgICAgLy8gU2ltdWxhdGUgQVBJIGNhbGxcbiAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCAxMDAwKSk7XG4gICAgICBcbiAgICAgIC8vIE1vY2sgYWxhcm0gZGF0YSAtIGluIHByb2R1Y3Rpb24gdGhpcyB3b3VsZCBjb21lIGZyb20gQVBJXG4gICAgICBjb25zdCBtb2NrQWxhcm1EYXRhOiBBbGFybUZvcm1EYXRhID0ge1xuICAgICAgICBuYW1lOiAnTW9ybmluZyBBbGFybScsXG4gICAgICAgIHRpbWU6ICcwNzozMCcsXG4gICAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICAgIHJlcGVhdF9wYXR0ZXJuOiAnd2Vla2RheXMnLFxuICAgICAgICByZXBlYXRfZGF5czogWzEsIDIsIDMsIDQsIDVdLCAvLyBNb25kYXkgdG8gRnJpZGF5XG4gICAgICAgIFxuICAgICAgICAvLyBBdWRpbyBzZXR0aW5nc1xuICAgICAgICBhdWRpb19maWxlX3VybDogJ2h0dHBzOi8vZXhhbXBsZS5jb20vZ2VudGxlLXdha2UubXAzJyxcbiAgICAgICAgYXVkaW9fb3V0cHV0OiAnYXV0bycsXG4gICAgICAgIHZvbHVtZTogMC44LFxuICAgICAgICBcbiAgICAgICAgLy8gQmVoYXZpb3Igc2V0dGluZ3NcbiAgICAgICAgdmlicmF0aW9uX2VuYWJsZWQ6IHRydWUsXG4gICAgICAgIHNub296ZV9lbmFibGVkOiB0cnVlLFxuICAgICAgICBzbm9vemVfZHVyYXRpb246IDEwLFxuICAgICAgICBzbm9vemVfY291bnRfbGltaXQ6IDMsXG4gICAgICAgIFxuICAgICAgICAvLyBXaGl0ZSBub2lzZSBpbnRlZ3JhdGlvblxuICAgICAgICB3aGl0ZV9ub2lzZV9lbmFibGVkOiB0cnVlLFxuICAgICAgICB3aGl0ZV9ub2lzZV9maWxlX3VybDogJ2h0dHBzOi8vZXhhbXBsZS5jb20vcmFpbi5tcDMnLFxuICAgICAgICB3aGl0ZV9ub2lzZV9jYXRlZ29yeTogJ25hdHVyZScsXG4gICAgICAgIHdoaXRlX25vaXNlX3ZvbHVtZTogMC42LFxuICAgICAgICB3aGl0ZV9ub2lzZV9kdXJhdGlvbjogNDgwLCAvLyA4IGhvdXJzXG4gICAgICAgIFxuICAgICAgICAvLyBBdWRpbyBlZmZlY3RzXG4gICAgICAgIGZhZGVfaW5fZHVyYXRpb246IDUsXG4gICAgICAgIGZhZGVfb3V0X2R1cmF0aW9uOiAzLFxuICAgICAgfTtcblxuICAgICAgc2V0QWxhcm1EYXRhKG1vY2tBbGFybURhdGEpO1xuICAgICAgXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGxvYWRpbmcgYWxhcm0gZGF0YTonLCBlcnJvcik7XG4gICAgICBzZXRFcnJvcignRmFpbGVkIHRvIGxvYWQgYWxhcm0gZGF0YS4gUGxlYXNlIHRyeSBhZ2Fpbi4nKTtcbiAgICAgIFxuICAgICAgQWxlcnQuYWxlcnQoXG4gICAgICAgICdMb2FkaW5nIEVycm9yJyxcbiAgICAgICAgJ1VuYWJsZSB0byBsb2FkIGFsYXJtIGRhdGEuIFdvdWxkIHlvdSBsaWtlIHRvIHRyeSBhZ2FpbiBvciBnbyBiYWNrPycsXG4gICAgICAgIFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0ZXh0OiAnR28gQmFjaycsXG4gICAgICAgICAgICBzdHlsZTogJ2NhbmNlbCcsXG4gICAgICAgICAgICBvblByZXNzOiAoKSA9PiBuYXZpZ2F0aW9uLmdvQmFjaygpXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0ZXh0OiAnUmV0cnknLFxuICAgICAgICAgICAgb25QcmVzczogbG9hZEFsYXJtRGF0YVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XG4gICAgfVxuICB9O1xuXG4gIC8vIExvYWRpbmcgc3RhdGVcbiAgaWYgKGxvYWRpbmcpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPFNhZmVBcmVhVmlldyBzdHlsZT17c3R5bGVzLmNvbnRhaW5lcn0+XG4gICAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMubG9hZGluZ0NvbnRhaW5lcn0+XG4gICAgICAgICAgPEFjdGl2aXR5SW5kaWNhdG9yIHNpemU9XCJsYXJnZVwiIGNvbG9yPXt0aGVtZS5jb2xvcnMucHJpbWFyeX0gLz5cbiAgICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLmxvYWRpbmdUZXh0fT5Mb2FkaW5nIGFsYXJtIHNldHRpbmdzLi4uPC9UZXh0PlxuICAgICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMubG9hZGluZ1N1YnRleHR9PlxuICAgICAgICAgICAgRmV0Y2hpbmcgeW91ciBhbGFybSBjb25maWd1cmF0aW9uXG4gICAgICAgICAgPC9UZXh0PlxuICAgICAgICA8L1ZpZXc+XG4gICAgICA8L1NhZmVBcmVhVmlldz5cbiAgICApO1xuICB9XG5cbiAgLy8gRXJyb3Igc3RhdGVcbiAgaWYgKGVycm9yIHx8ICFhbGFybURhdGEpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPFNhZmVBcmVhVmlldyBzdHlsZT17c3R5bGVzLmNvbnRhaW5lcn0+XG4gICAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuZXJyb3JDb250YWluZXJ9PlxuICAgICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMuZXJyb3JJY29ufT7imqDvuI88L1RleHQ+XG4gICAgICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy5lcnJvclRpdGxlfT5VbmFibGUgdG8gTG9hZCBBbGFybTwvVGV4dD5cbiAgICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLmVycm9yVGV4dH0+XG4gICAgICAgICAgICB7ZXJyb3IgfHwgJ1RoZSBhbGFybSBkYXRhIGNvdWxkIG5vdCBiZSByZXRyaWV2ZWQuJ31cbiAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5lcnJvckJ1dHRvbnN9PlxuICAgICAgICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5idXR0b25Db250YWluZXJ9PlxuICAgICAgICAgICAgICA8VGV4dCBcbiAgICAgICAgICAgICAgICBzdHlsZT17c3R5bGVzLnJldHJ5QnV0dG9ufVxuICAgICAgICAgICAgICAgIG9uUHJlc3M9e2xvYWRBbGFybURhdGF9XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICBUcnkgQWdhaW5cbiAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgPC9WaWV3PlxuICAgICAgICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5idXR0b25Db250YWluZXJ9PlxuICAgICAgICAgICAgICA8VGV4dCBcbiAgICAgICAgICAgICAgICBzdHlsZT17c3R5bGVzLmJhY2tCdXR0b259XG4gICAgICAgICAgICAgICAgb25QcmVzcz17KCkgPT4gbmF2aWdhdGlvbi5nb0JhY2soKX1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIEdvIEJhY2tcbiAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgPC9WaWV3PlxuICAgICAgICAgIDwvVmlldz5cbiAgICAgICAgPC9WaWV3PlxuICAgICAgPC9TYWZlQXJlYVZpZXc+XG4gICAgKTtcbiAgfVxuXG4gIC8vIFJlbmRlciB0aGUgQ3JlYXRlQWxhcm1TY3JlZW4gY29tcG9uZW50IHdpdGggcHJlLXBvcHVsYXRlZCBkYXRhXG4gIC8vIFRoaXMgaXMgYSBzcGVjaWFsaXplZCBhcHByb2FjaCB0aGF0IHJldXNlcyB0aGUgY29tcHJlaGVuc2l2ZSBmb3JtIGxvZ2ljXG4gIHJldHVybiAoXG4gICAgPEVkaXRBbGFybVdyYXBwZXJcbiAgICAgIG5hdmlnYXRpb249e25hdmlnYXRpb259XG4gICAgICByb3V0ZT17cm91dGV9XG4gICAgICBpbml0aWFsRGF0YT17YWxhcm1EYXRhfVxuICAgICAgYWxhcm1JZD17YWxhcm1JZH1cbiAgICAvPlxuICApO1xufTtcblxuLy8gV3JhcHBlciBjb21wb25lbnQgdGhhdCBoYW5kbGVzIHRoZSBlZGl0LXNwZWNpZmljIGxvZ2ljIHdoaWxlIHJldXNpbmcgQ3JlYXRlQWxhcm1TY3JlZW5cbmludGVyZmFjZSBFZGl0QWxhcm1XcmFwcGVyUHJvcHMge1xuICBuYXZpZ2F0aW9uOiBhbnk7XG4gIHJvdXRlOiBhbnk7XG4gIGluaXRpYWxEYXRhOiBBbGFybUZvcm1EYXRhO1xuICBhbGFybUlkOiBzdHJpbmc7XG59XG5cbmNvbnN0IEVkaXRBbGFybVdyYXBwZXI6IFJlYWN0LkZDPEVkaXRBbGFybVdyYXBwZXJQcm9wcz4gPSAoeyBcbiAgbmF2aWdhdGlvbiwgXG4gIHJvdXRlLCBcbiAgaW5pdGlhbERhdGEsIFxuICBhbGFybUlkIFxufSkgPT4ge1xuICAvLyBPdmVycmlkZSB0aGUgcm91dGUgcGFyYW1zIHRvIGluY2x1ZGUgdGhlIGluaXRpYWwgZGF0YVxuICBjb25zdCBlZGl0Um91dGUgPSB7XG4gICAgLi4ucm91dGUsXG4gICAgcGFyYW1zOiB7XG4gICAgICAuLi5yb3V0ZS5wYXJhbXMsXG4gICAgICBhbGFybUlkLFxuICAgICAgaW5pdGlhbERhdGEgLy8gUGFzcyB0aGUgbG9hZGVkIGRhdGEgdG8gQ3JlYXRlQWxhcm1TY3JlZW5cbiAgICB9XG4gIH07XG5cbiAgLy8gVXNlIHRoZSBDcmVhdGVBbGFybVNjcmVlbiBjb21wb25lbnQgd2l0aCBlZGl0LXNwZWNpZmljIGJlaGF2aW9yXG4gIHJldHVybiA8Q3JlYXRlQWxhcm1TY3JlZW4gbmF2aWdhdGlvbj17bmF2aWdhdGlvbn0gcm91dGU9e2VkaXRSb3V0ZX0gLz47XG59O1xuXG5jb25zdCBjcmVhdGVTdHlsZXMgPSAodGhlbWU6IGFueSkgPT4gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBjb250YWluZXI6IHtcbiAgICBmbGV4OiAxLFxuICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUuY29sb3JzLmJhY2tncm91bmQsXG4gIH0sXG4gIGxvYWRpbmdDb250YWluZXI6IHtcbiAgICBmbGV4OiAxLFxuICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nWzhdLFxuICB9LFxuICBsb2FkaW5nVGV4dDoge1xuICAgIGZvbnRTaXplOiB0aGVtZS5mb250U2l6ZS5sZyxcbiAgICBmb250V2VpZ2h0OiB0aGVtZS5mb250V2VpZ2h0LnNlbWlib2xkLFxuICAgIGNvbG9yOiB0aGVtZS5jb2xvcnMudGV4dCxcbiAgICBtYXJnaW5Ub3A6IHRoZW1lLnNwYWNpbmdbNF0sXG4gICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgfSxcbiAgbG9hZGluZ1N1YnRleHQ6IHtcbiAgICBmb250U2l6ZTogdGhlbWUuZm9udFNpemUuYmFzZSxcbiAgICBjb2xvcjogdGhlbWUuY29sb3JzLnRleHRTZWNvbmRhcnksXG4gICAgbWFyZ2luVG9wOiB0aGVtZS5zcGFjaW5nWzJdLFxuICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gICAgbGluZUhlaWdodDogdGhlbWUubGluZUhlaWdodC5yZWxheGVkICogdGhlbWUuZm9udFNpemUuYmFzZSxcbiAgfSxcbiAgZXJyb3JDb250YWluZXI6IHtcbiAgICBmbGV4OiAxLFxuICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nWzhdLFxuICB9LFxuICBlcnJvckljb246IHtcbiAgICBmb250U2l6ZTogNjQsXG4gICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nWzRdLFxuICB9LFxuICBlcnJvclRpdGxlOiB7XG4gICAgZm9udFNpemU6IHRoZW1lLmZvbnRTaXplLnhsLFxuICAgIGZvbnRXZWlnaHQ6IHRoZW1lLmZvbnRXZWlnaHQuYm9sZCxcbiAgICBjb2xvcjogdGhlbWUuY29sb3JzLnRleHQsXG4gICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nWzNdLFxuICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gIH0sXG4gIGVycm9yVGV4dDoge1xuICAgIGZvbnRTaXplOiB0aGVtZS5mb250U2l6ZS5iYXNlLFxuICAgIGNvbG9yOiB0aGVtZS5jb2xvcnMudGV4dFNlY29uZGFyeSxcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgIGxpbmVIZWlnaHQ6IHRoZW1lLmxpbmVIZWlnaHQucmVsYXhlZCAqIHRoZW1lLmZvbnRTaXplLmJhc2UsXG4gICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nWzZdLFxuICB9LFxuICBlcnJvckJ1dHRvbnM6IHtcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxuICAgIHdpZHRoOiAnMTAwJScsXG4gICAgbWF4V2lkdGg6IDMwMCxcbiAgfSxcbiAgYnV0dG9uQ29udGFpbmVyOiB7XG4gICAgZmxleDogMSxcbiAgICBtYXJnaW5Ib3Jpem9udGFsOiB0aGVtZS5zcGFjaW5nWzJdLFxuICB9LFxuICByZXRyeUJ1dHRvbjoge1xuICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUuY29sb3JzLnByaW1hcnksXG4gICAgY29sb3I6ICcjRkZGRkZGJyxcbiAgICBmb250U2l6ZTogdGhlbWUuZm9udFNpemUuYmFzZSxcbiAgICBmb250V2VpZ2h0OiB0aGVtZS5mb250V2VpZ2h0LnNlbWlib2xkLFxuICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZ1s0XSxcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLmJvcmRlclJhZGl1cy5sZyxcbiAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gIH0sXG4gIGJhY2tCdXR0b246IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5jYXJkLFxuICAgIGNvbG9yOiB0aGVtZS5jb2xvcnMudGV4dCxcbiAgICBmb250U2l6ZTogdGhlbWUuZm9udFNpemUuYmFzZSxcbiAgICBmb250V2VpZ2h0OiB0aGVtZS5mb250V2VpZ2h0LnNlbWlib2xkLFxuICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZ1s0XSxcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLmJvcmRlclJhZGl1cy5sZyxcbiAgICBib3JkZXJXaWR0aDogMSxcbiAgICBib3JkZXJDb2xvcjogdGhlbWUuY29sb3JzLmJvcmRlcixcbiAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgRWRpdEFsYXJtU2NyZWVuOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUF3QmE7SUFBQUEsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsYUFBQTtBQUFBQSxhQUFBLEdBQUFFLENBQUE7Ozs7Ozs7Ozs7QUF4QmI7Ozs7OztBQU9BLE1BQUFDLE9BQUE7QUFBQTtBQUFBLENBQUFILGFBQUEsR0FBQUUsQ0FBQSxPQUFBRSxPQUFBO0FBQ0EsTUFBQUMsY0FBQTtBQUFBO0FBQUEs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