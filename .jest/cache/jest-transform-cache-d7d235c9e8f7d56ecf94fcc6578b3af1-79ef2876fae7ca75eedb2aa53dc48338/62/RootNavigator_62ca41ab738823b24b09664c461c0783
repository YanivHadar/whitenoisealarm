2354a7984e7cd55c65e3d4876341c5dc
"use strict";

/* istanbul ignore next */
function cov_1qvdik848u() {
  var path = "/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/navigation/RootNavigator.tsx";
  var hash = "a41eb8262badcf4c43e81fd580851dd80f3c31cb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/navigation/RootNavigator.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 31
        }
      },
      "2": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 50
        }
      },
      "3": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 50
        }
      },
      "4": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 52
        }
      },
      "5": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 7,
          column: 72
        }
      },
      "6": {
        start: {
          line: 8,
          column: 21
        },
        end: {
          line: 8,
          column: 51
        }
      },
      "7": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 10,
          column: 50
        }
      },
      "8": {
        start: {
          line: 11,
          column: 27
        },
        end: {
          line: 11,
          column: 56
        }
      },
      "9": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 65
        }
      },
      "10": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 49
        }
      },
      "11": {
        start: {
          line: 15,
          column: 27
        },
        end: {
          line: 31,
          column: 1
        }
      },
      "12": {
        start: {
          line: 16,
          column: 48
        },
        end: {
          line: 16,
          column: 80
        }
      },
      "13": {
        start: {
          line: 17,
          column: 22
        },
        end: {
          line: 17,
          column: 53
        }
      },
      "14": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "15": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 73
        }
      },
      "16": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 30,
          column: 22
        }
      },
      "17": {
        start: {
          line: 32,
          column: 22
        },
        end: {
          line: 64,
          column: 1
        }
      },
      "18": {
        start: {
          line: 33,
          column: 22
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "19": {
        start: {
          line: 34,
          column: 28
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "20": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 152
        }
      },
      "21": {
        start: {
          line: 65,
          column: 0
        },
        end: {
          line: 65,
          column: 38
        }
      },
      "22": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 66,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 27
          },
          end: {
            line: 15,
            column: 28
          }
        },
        loc: {
          start: {
            line: 15,
            column: 33
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 32,
            column: 22
          },
          end: {
            line: 32,
            column: 23
          }
        },
        loc: {
          start: {
            line: 32,
            column: 28
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 32
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 21
          },
          end: {
            line: 30,
            column: 17
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 40
          },
          end: {
            line: 28,
            column: 16
          }
        }, {
          start: {
            line: 28,
            column: 21
          },
          end: {
            line: 30,
            column: 16
          }
        }],
        line: 26
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/navigation/RootNavigator.tsx",
      mappings: ";;;;AAQA,mDAA+D;AAC/D,qDAA+D;AAC/D,yEAAiE;AACjE,oDAAmD;AAGnD,oBAAoB;AACpB,mDAAgD;AAChD,yDAAsD;AAEtD,oBAAoB;AACpB,kEAA+D;AAE/D,MAAM,KAAK,GAAG,IAAA,4BAAoB,GAAsB,CAAC;AAEzD,MAAM,kBAAkB,GAAa,GAAG,EAAE;IACxC,MAAM,EAAE,eAAe,EAAE,cAAc,EAAE,GAAG,IAAA,yBAAY,GAAE,CAAC;IAC3D,MAAM,EAAE,KAAK,EAAE,GAAG,IAAA,wBAAQ,GAAE,CAAC;IAE7B,iDAAiD;IACjD,IAAI,cAAc,EAAE,CAAC;QACnB,OAAO,uBAAC,6BAAa,KAAG,CAAC;IAC3B,CAAC;IAED,OAAO,CACL,uBAAC,KAAK,CAAC,SAAS,IACd,aAAa,EAAE;YACb,WAAW,EAAE,KAAK;YAClB,SAAS,EAAE,EAAE,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE;YACvD,cAAc,EAAE,IAAI;SACrB,YAEA,eAAe,CAAC,CAAC,CAAC,CACjB,uBAAC,KAAK,CAAC,MAAM,IACX,IAAI,EAAC,MAAM,EACX,SAAS,EAAE,mCAAgB,EAC3B,OAAO,EAAE;gBACP,uBAAuB,EAAE,MAAM;aAChC,GACD,CACH,CAAC,CAAC,CAAC,CACF,uBAAC,KAAK,CAAC,MAAM,IACX,IAAI,EAAC,MAAM,EACX,SAAS,EAAE,6BAAa,EACxB,OAAO,EAAE;gBACP,uBAAuB,EAAE,KAAK;aAC/B,GACD,CACH,GACe,CACnB,CAAC;AACJ,CAAC,CAAC;AAEK,MAAM,aAAa,GAAa,GAAG,EAAE;IAC1C,MAAM,EAAE,KAAK,EAAE,GAAG,IAAA,wBAAQ,GAAE,CAAC;IAE7B,MAAM,eAAe,GAAG;QACtB,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,KAAK,SAAS,EAAE,uBAAuB;QACpE,MAAM,EAAE;YACN,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO;YAC7B,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU;YACnC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO;YAC1B,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI;YACvB,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM;YAC3B,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO;SACnC;QACD,KAAK,EAAE;YACL,OAAO,EAAE;gBACP,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO;gBAC1C,UAAU,EAAE,QAAiB;aAC9B;YACD,MAAM,EAAE;gBACN,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM;gBACzC,UAAU,EAAE,KAAc;aAC3B;YACD,IAAI,EAAE;gBACJ,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI;gBACvC,UAAU,EAAE,MAAe;aAC5B;YACD,KAAK,EAAE;gBACL,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI;gBACvC,UAAU,EAAE,KAAc;aAC3B;SACF;KACF,CAAC;IAEF,OAAO,CACL,uBAAC,4BAAmB,IAAC,KAAK,EAAE,eAAe,YACzC,uBAAC,kBAAkB,KAAG,GACF,CACvB,CAAC;AACJ,CAAC,CAAC;AAtCW,QAAA,aAAa,iBAsCxB;AAEF,kBAAe,qBAAa,CAAC",
      names: [],
      sources: ["/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/navigation/RootNavigator.tsx"],
      sourcesContent: ["/**\n * Root Navigator\n * \n * Main navigation container that manages authentication\n * flow and app navigation state.\n */\n\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { useTheme } from '../components/providers/ThemeProvider';\nimport { useAuthStore } from '../store/auth-store';\nimport { RootStackParamList } from '../types/navigation';\n\n// Import navigators\nimport { AuthNavigator } from './AuthNavigator';\nimport { MainTabNavigator } from './MainTabNavigator';\n\n// Import components\nimport { LoadingScreen } from '../components/ui/LoadingScreen';\n\nconst Stack = createStackNavigator<RootStackParamList>();\n\nconst RootStackNavigator: React.FC = () => {\n  const { isAuthenticated, isInitializing } = useAuthStore();\n  const { theme } = useTheme();\n\n  // Show loading screen while auth is initializing\n  if (isInitializing) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: { backgroundColor: theme.colors.background },\n        gestureEnabled: true,\n      }}\n    >\n      {isAuthenticated ? (\n        <Stack.Screen\n          name=\"Main\"\n          component={MainTabNavigator}\n          options={{\n            animationTypeForReplace: 'push',\n          }}\n        />\n      ) : (\n        <Stack.Screen\n          name=\"Auth\"\n          component={AuthNavigator}\n          options={{\n            animationTypeForReplace: 'pop',\n          }}\n        />\n      )}\n    </Stack.Navigator>\n  );\n};\n\nexport const RootNavigator: React.FC = () => {\n  const { theme } = useTheme();\n\n  const navigationTheme = {\n    dark: theme.colors.background === '#0A0D14', // Detect if dark theme\n    colors: {\n      primary: theme.colors.primary,\n      background: theme.colors.background,\n      card: theme.colors.surface,\n      text: theme.colors.text,\n      border: theme.colors.border,\n      notification: theme.colors.primary,\n    },\n    fonts: {\n      regular: {\n        fontFamily: theme.typography.fonts.regular,\n        fontWeight: 'normal' as const,\n      },\n      medium: {\n        fontFamily: theme.typography.fonts.medium,\n        fontWeight: '500' as const,\n      },\n      bold: {\n        fontFamily: theme.typography.fonts.bold,\n        fontWeight: 'bold' as const,\n      },\n      heavy: {\n        fontFamily: theme.typography.fonts.bold,\n        fontWeight: '800' as const,\n      },\n    },\n  };\n\n  return (\n    <NavigationContainer theme={navigationTheme}>\n      <RootStackNavigator />\n    </NavigationContainer>\n  );\n};\n\nexport default RootNavigator;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a41eb8262badcf4c43e81fd580851dd80f3c31cb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1qvdik848u = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1qvdik848u();
cov_1qvdik848u().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1qvdik848u().s[1]++;
exports.RootNavigator = void 0;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_1qvdik848u().s[2]++, require("react/jsx-runtime"));
const stack_1 =
/* istanbul ignore next */
(cov_1qvdik848u().s[3]++, require("@react-navigation/stack"));
const native_1 =
/* istanbul ignore next */
(cov_1qvdik848u().s[4]++, require("@react-navigation/native"));
const ThemeProvider_1 =
/* istanbul ignore next */
(cov_1qvdik848u().s[5]++, require("../components/providers/ThemeProvider"));
const auth_store_1 =
/* istanbul ignore next */
(cov_1qvdik848u().s[6]++, require("../store/auth-store"));
// Import navigators
const AuthNavigator_1 =
/* istanbul ignore next */
(cov_1qvdik848u().s[7]++, require("./AuthNavigator"));
const MainTabNavigator_1 =
/* istanbul ignore next */
(cov_1qvdik848u().s[8]++, require("./MainTabNavigator"));
// Import components
const LoadingScreen_1 =
/* istanbul ignore next */
(cov_1qvdik848u().s[9]++, require("../components/ui/LoadingScreen"));
const Stack =
/* istanbul ignore next */
(cov_1qvdik848u().s[10]++, (0, stack_1.createStackNavigator)());
/* istanbul ignore next */
cov_1qvdik848u().s[11]++;
const RootStackNavigator = () => {
  /* istanbul ignore next */
  cov_1qvdik848u().f[0]++;
  const {
    isAuthenticated,
    isInitializing
  } =
  /* istanbul ignore next */
  (cov_1qvdik848u().s[12]++, (0, auth_store_1.useAuthStore)());
  const {
    theme
  } =
  /* istanbul ignore next */
  (cov_1qvdik848u().s[13]++, (0, ThemeProvider_1.useTheme)());
  // Show loading screen while auth is initializing
  /* istanbul ignore next */
  cov_1qvdik848u().s[14]++;
  if (isInitializing) {
    /* istanbul ignore next */
    cov_1qvdik848u().b[0][0]++;
    cov_1qvdik848u().s[15]++;
    return (0, jsx_runtime_1.jsx)(LoadingScreen_1.LoadingScreen, {});
  } else
  /* istanbul ignore next */
  {
    cov_1qvdik848u().b[0][1]++;
  }
  cov_1qvdik848u().s[16]++;
  return (0, jsx_runtime_1.jsx)(Stack.Navigator, {
    screenOptions: {
      headerShown: false,
      cardStyle: {
        backgroundColor: theme.colors.background
      },
      gestureEnabled: true
    },
    children: isAuthenticated ?
    /* istanbul ignore next */
    (cov_1qvdik848u().b[1][0]++, (0, jsx_runtime_1.jsx)(Stack.Screen, {
      name: "Main",
      component: MainTabNavigator_1.MainTabNavigator,
      options: {
        animationTypeForReplace: 'push'
      }
    })) :
    /* istanbul ignore next */
    (cov_1qvdik848u().b[1][1]++, (0, jsx_runtime_1.jsx)(Stack.Screen, {
      name: "Auth",
      component: AuthNavigator_1.AuthNavigator,
      options: {
        animationTypeForReplace: 'pop'
      }
    }))
  });
};
/* istanbul ignore next */
cov_1qvdik848u().s[17]++;
const RootNavigator = () => {
  /* istanbul ignore next */
  cov_1qvdik848u().f[1]++;
  const {
    theme
  } =
  /* istanbul ignore next */
  (cov_1qvdik848u().s[18]++, (0, ThemeProvider_1.useTheme)());
  const navigationTheme =
  /* istanbul ignore next */
  (cov_1qvdik848u().s[19]++, {
    dark: theme.colors.background === '#0A0D14',
    // Detect if dark theme
    colors: {
      primary: theme.colors.primary,
      background: theme.colors.background,
      card: theme.colors.surface,
      text: theme.colors.text,
      border: theme.colors.border,
      notification: theme.colors.primary
    },
    fonts: {
      regular: {
        fontFamily: theme.typography.fonts.regular,
        fontWeight: 'normal'
      },
      medium: {
        fontFamily: theme.typography.fonts.medium,
        fontWeight: '500'
      },
      bold: {
        fontFamily: theme.typography.fonts.bold,
        fontWeight: 'bold'
      },
      heavy: {
        fontFamily: theme.typography.fonts.bold,
        fontWeight: '800'
      }
    }
  });
  /* istanbul ignore next */
  cov_1qvdik848u().s[20]++;
  return (0, jsx_runtime_1.jsx)(native_1.NavigationContainer, {
    theme: navigationTheme,
    children: (0, jsx_runtime_1.jsx)(RootStackNavigator, {})
  });
};
/* istanbul ignore next */
cov_1qvdik848u().s[21]++;
exports.RootNavigator = RootNavigator;
/* istanbul ignore next */
cov_1qvdik848u().s[22]++;
exports.default = exports.RootNavigator;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,