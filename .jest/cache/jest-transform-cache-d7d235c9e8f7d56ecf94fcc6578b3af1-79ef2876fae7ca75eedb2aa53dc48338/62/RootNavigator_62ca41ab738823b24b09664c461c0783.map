{"version":3,"names":["cov_1qvdik848u","actualCoverage","s","stack_1","require","native_1","ThemeProvider_1","auth_store_1","AuthNavigator_1","MainTabNavigator_1","LoadingScreen_1","Stack","createStackNavigator","RootStackNavigator","f","isAuthenticated","isInitializing","useAuthStore","theme","useTheme","b","jsx_runtime_1","jsx","LoadingScreen","Navigator","screenOptions","headerShown","cardStyle","backgroundColor","colors","background","gestureEnabled","children","Screen","name","component","MainTabNavigator","options","animationTypeForReplace","AuthNavigator","RootNavigator","navigationTheme","dark","primary","card","surface","text","border","notification","fonts","regular","fontFamily","typography","fontWeight","medium","bold","heavy","NavigationContainer","exports","default"],"sources":["/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/navigation/RootNavigator.tsx"],"sourcesContent":["/**\n * Root Navigator\n * \n * Main navigation container that manages authentication\n * flow and app navigation state.\n */\n\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { useTheme } from '../components/providers/ThemeProvider';\nimport { useAuthStore } from '../store/auth-store';\nimport { RootStackParamList } from '../types/navigation';\n\n// Import navigators\nimport { AuthNavigator } from './AuthNavigator';\nimport { MainTabNavigator } from './MainTabNavigator';\n\n// Import components\nimport { LoadingScreen } from '../components/ui/LoadingScreen';\n\nconst Stack = createStackNavigator<RootStackParamList>();\n\nconst RootStackNavigator: React.FC = () => {\n  const { isAuthenticated, isInitializing } = useAuthStore();\n  const { theme } = useTheme();\n\n  // Show loading screen while auth is initializing\n  if (isInitializing) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: { backgroundColor: theme.colors.background },\n        gestureEnabled: true,\n      }}\n    >\n      {isAuthenticated ? (\n        <Stack.Screen\n          name=\"Main\"\n          component={MainTabNavigator}\n          options={{\n            animationTypeForReplace: 'push',\n          }}\n        />\n      ) : (\n        <Stack.Screen\n          name=\"Auth\"\n          component={AuthNavigator}\n          options={{\n            animationTypeForReplace: 'pop',\n          }}\n        />\n      )}\n    </Stack.Navigator>\n  );\n};\n\nexport const RootNavigator: React.FC = () => {\n  const { theme } = useTheme();\n\n  const navigationTheme = {\n    dark: theme.colors.background === '#0A0D14', // Detect if dark theme\n    colors: {\n      primary: theme.colors.primary,\n      background: theme.colors.background,\n      card: theme.colors.surface,\n      text: theme.colors.text,\n      border: theme.colors.border,\n      notification: theme.colors.primary,\n    },\n    fonts: {\n      regular: {\n        fontFamily: theme.typography.fonts.regular,\n        fontWeight: 'normal' as const,\n      },\n      medium: {\n        fontFamily: theme.typography.fonts.medium,\n        fontWeight: '500' as const,\n      },\n      bold: {\n        fontFamily: theme.typography.fonts.bold,\n        fontWeight: 'bold' as const,\n      },\n      heavy: {\n        fontFamily: theme.typography.fonts.bold,\n        fontWeight: '800' as const,\n      },\n    },\n  };\n\n  return (\n    <NavigationContainer theme={navigationTheme}>\n      <RootStackNavigator />\n    </NavigationContainer>\n  );\n};\n\nexport default RootNavigator;"],"mappings":"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","ignoreList":[]}