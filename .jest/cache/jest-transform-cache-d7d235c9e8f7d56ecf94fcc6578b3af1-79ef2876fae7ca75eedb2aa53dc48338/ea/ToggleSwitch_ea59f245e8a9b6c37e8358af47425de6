9853c859cd2856cc1cdb07a8d4d09237
"use strict";

/* istanbul ignore next */
function cov_10p2bwn6ad() {
  var path = "/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/components/ui/ToggleSwitch.tsx";
  var hash = "27dfbd7cf14d5434acea918c24e1f96e7b8db7dc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/components/ui/ToggleSwitch.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 30
        }
      },
      "2": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 50
        }
      },
      "3": {
        start: {
          line: 5,
          column: 23
        },
        end: {
          line: 5,
          column: 46
        }
      },
      "4": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 6,
          column: 61
        }
      },
      "5": {
        start: {
          line: 7,
          column: 21
        },
        end: {
          line: 19,
          column: 1
        }
      },
      "6": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 8,
          column: 53
        }
      },
      "7": {
        start: {
          line: 9,
          column: 19
        },
        end: {
          line: 9,
          column: 38
        }
      },
      "8": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 14,
          column: 5
        }
      },
      "9": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 13,
          column: 9
        }
      },
      "10": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 12,
          column: 34
        }
      },
      "11": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 18,
          column: 132
        }
      },
      "12": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 36
        }
      },
      "13": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 65,
          column: 2
        }
      },
      "14": {
        start: {
          line: 21,
          column: 32
        },
        end: {
          line: 65,
          column: 2
        }
      },
      "15": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 66,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 21
          },
          end: {
            line: 7,
            column: 22
          }
        },
        loc: {
          start: {
            line: 7,
            column: 121
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 24
          },
          end: {
            line: 10,
            column: 25
          }
        },
        loc: {
          start: {
            line: 10,
            column: 30
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 21
          },
          end: {
            line: 21,
            column: 22
          }
        },
        loc: {
          start: {
            line: 21,
            column: 32
          },
          end: {
            line: 65,
            column: 2
          }
        },
        line: 21
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 7,
            column: 66
          },
          end: {
            line: 7,
            column: 82
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 7,
            column: 77
          },
          end: {
            line: 7,
            column: 82
          }
        }],
        line: 7
      },
      "1": {
        loc: {
          start: {
            line: 7,
            column: 90
          },
          end: {
            line: 7,
            column: 114
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 7,
            column: 99
          },
          end: {
            line: 7,
            column: 114
          }
        }],
        line: 7
      },
      "2": {
        loc: {
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 13,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 13,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "3": {
        loc: {
          start: {
            line: 15,
            column: 96
          },
          end: {
            line: 15,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 96
          },
          end: {
            line: 15,
            column: 104
          }
        }, {
          start: {
            line: 15,
            column: 108
          },
          end: {
            line: 15,
            column: 123
          }
        }],
        line: 15
      },
      "4": {
        loc: {
          start: {
            line: 15,
            column: 491
          },
          end: {
            line: 15,
            column: 582
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 491
          },
          end: {
            line: 15,
            column: 495
          }
        }, {
          start: {
            line: 15,
            column: 499
          },
          end: {
            line: 15,
            column: 582
          }
        }],
        line: 15
      },
      "5": {
        loc: {
          start: {
            line: 15,
            column: 739
          },
          end: {
            line: 15,
            column: 770
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 739
          },
          end: {
            line: 15,
            column: 747
          }
        }, {
          start: {
            line: 15,
            column: 751
          },
          end: {
            line: 15,
            column: 770
          }
        }],
        line: 15
      },
      "6": {
        loc: {
          start: {
            line: 15,
            column: 793
          },
          end: {
            line: 15,
            column: 942
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 793
          },
          end: {
            line: 15,
            column: 804
          }
        }, {
          start: {
            line: 15,
            column: 809
          },
          end: {
            line: 15,
            column: 941
          }
        }],
        line: 15
      },
      "7": {
        loc: {
          start: {
            line: 15,
            column: 883
          },
          end: {
            line: 15,
            column: 914
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 883
          },
          end: {
            line: 15,
            column: 891
          }
        }, {
          start: {
            line: 15,
            column: 895
          },
          end: {
            line: 15,
            column: 914
          }
        }],
        line: 15
      },
      "8": {
        loc: {
          start: {
            line: 18,
            column: 35
          },
          end: {
            line: 18,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 43
          },
          end: {
            line: 18,
            column: 63
          }
        }, {
          start: {
            line: 18,
            column: 66
          },
          end: {
            line: 18,
            column: 92
          }
        }],
        line: 18
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/components/ui/ToggleSwitch.tsx",
      mappings: "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",
      names: [],
      sources: ["/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/components/ui/ToggleSwitch.tsx"],
      sourcesContent: ["/**\n * ToggleSwitch Component\n * \n * Sleep-optimized toggle switch with clear labeling\n * and accessibility support for settings configuration.\n */\n\nimport React from 'react';\nimport { View, Text, StyleSheet, Switch, TouchableOpacity } from 'react-native';\nimport { useTheme } from '../providers/ThemeProvider';\n\ninterface ToggleSwitchProps {\n  label: string;\n  description?: string;\n  value: boolean;\n  onValueChange: (value: boolean) => void;\n  disabled?: boolean;\n  icon?: string;\n  testID?: string;\n}\n\nexport const ToggleSwitch: React.FC<ToggleSwitchProps> = ({\n  label,\n  description,\n  value,\n  onValueChange,\n  disabled = false,\n  icon,\n  testID = 'toggle-switch'\n}) => {\n  const { theme } = useTheme();\n  const styles = createStyles(theme);\n\n  const handlePress = () => {\n    if (!disabled) {\n      onValueChange(!value);\n    }\n  };\n\n  return (\n    <TouchableOpacity\n      style={[styles.container, disabled && styles.disabled]}\n      onPress={handlePress}\n      activeOpacity={0.7}\n      accessibilityRole=\"switch\"\n      accessibilityState={{ checked: value }}\n      accessibilityLabel={label}\n      accessibilityHint={description}\n      testID={testID}\n    >\n      <View style={styles.content}>\n        <View style={styles.labelContainer}>\n          {icon && <Text style={styles.icon}>{icon}</Text>}\n          <View style={styles.textContainer}>\n            <Text style={[styles.label, disabled && styles.disabledText]}>\n              {label}\n            </Text>\n            {description && (\n              <Text style={[styles.description, disabled && styles.disabledText]}>\n                {description}\n              </Text>\n            )}\n          </View>\n        </View>\n        \n        <Switch\n          value={value}\n          onValueChange={onValueChange}\n          disabled={disabled}\n          trackColor={{\n            false: theme.colors.border,\n            true: theme.colors.primary + '40',\n          }}\n          thumbColor={value ? theme.colors.primary : theme.colors.textSecondary}\n          testID={`${testID}-switch`}\n        />\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst createStyles = (theme: any) => StyleSheet.create({\n  container: {\n    backgroundColor: theme.colors.card,\n    borderRadius: theme.borderRadius.lg,\n    padding: theme.spacing[4],\n    marginVertical: theme.spacing[2],\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  disabled: {\n    opacity: 0.6,\n    backgroundColor: theme.colors.disabled,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  labelContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  icon: {\n    fontSize: theme.fontSize.xl,\n    marginRight: theme.spacing[3],\n  },\n  textContainer: {\n    flex: 1,\n  },\n  label: {\n    fontSize: theme.fontSize.base,\n    fontWeight: theme.fontWeight.semibold,\n    color: theme.colors.text,\n    marginBottom: theme.spacing[1],\n  },\n  description: {\n    fontSize: theme.fontSize.sm,\n    color: theme.colors.textSecondary,\n    lineHeight: theme.lineHeight.snug * theme.fontSize.sm,\n  },\n  disabledText: {\n    color: theme.colors.textSecondary,\n  },\n});\n\nexport default ToggleSwitch;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "27dfbd7cf14d5434acea918c24e1f96e7b8db7dc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10p2bwn6ad = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_10p2bwn6ad();
cov_10p2bwn6ad().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_10p2bwn6ad().s[1]++;
exports.ToggleSwitch = void 0;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_10p2bwn6ad().s[2]++, require("react/jsx-runtime"));
const react_native_1 =
/* istanbul ignore next */
(cov_10p2bwn6ad().s[3]++, require("react-native"));
const ThemeProvider_1 =
/* istanbul ignore next */
(cov_10p2bwn6ad().s[4]++, require("../providers/ThemeProvider"));
/* istanbul ignore next */
cov_10p2bwn6ad().s[5]++;
const ToggleSwitch = ({
  label,
  description,
  value,
  onValueChange,
  disabled =
  /* istanbul ignore next */
  (cov_10p2bwn6ad().b[0][0]++, false),
  icon,
  testID =
  /* istanbul ignore next */
  (cov_10p2bwn6ad().b[1][0]++, 'toggle-switch')
}) => {
  /* istanbul ignore next */
  cov_10p2bwn6ad().f[0]++;
  const {
    theme
  } =
  /* istanbul ignore next */
  (cov_10p2bwn6ad().s[6]++, (0, ThemeProvider_1.useTheme)());
  const styles =
  /* istanbul ignore next */
  (cov_10p2bwn6ad().s[7]++, createStyles(theme));
  /* istanbul ignore next */
  cov_10p2bwn6ad().s[8]++;
  const handlePress = () => {
    /* istanbul ignore next */
    cov_10p2bwn6ad().f[1]++;
    cov_10p2bwn6ad().s[9]++;
    if (!disabled) {
      /* istanbul ignore next */
      cov_10p2bwn6ad().b[2][0]++;
      cov_10p2bwn6ad().s[10]++;
      onValueChange(!value);
    } else
    /* istanbul ignore next */
    {
      cov_10p2bwn6ad().b[2][1]++;
    }
  };
  /* istanbul ignore next */
  cov_10p2bwn6ad().s[11]++;
  return (0, jsx_runtime_1.jsx)(react_native_1.TouchableOpacity, {
    style: [styles.container,
    /* istanbul ignore next */
    (cov_10p2bwn6ad().b[3][0]++, disabled) &&
    /* istanbul ignore next */
    (cov_10p2bwn6ad().b[3][1]++, styles.disabled)],
    onPress: handlePress,
    activeOpacity: 0.7,
    accessibilityRole: "switch",
    accessibilityState: {
      checked: value
    },
    accessibilityLabel: label,
    accessibilityHint: description,
    testID: testID,
    children: (0, jsx_runtime_1.jsxs)(react_native_1.View, {
      style: styles.content,
      children: [(0, jsx_runtime_1.jsxs)(react_native_1.View, {
        style: styles.labelContainer,
        children: [
        /* istanbul ignore next */
        (cov_10p2bwn6ad().b[4][0]++, icon) &&
        /* istanbul ignore next */
        (cov_10p2bwn6ad().b[4][1]++, (0, jsx_runtime_1.jsx)(react_native_1.Text, {
          style: styles.icon,
          children: icon
        })), (0, jsx_runtime_1.jsxs)(react_native_1.View, {
          style: styles.textContainer,
          children: [(0, jsx_runtime_1.jsx)(react_native_1.Text, {
            style: [styles.label,
            /* istanbul ignore next */
            (cov_10p2bwn6ad().b[5][0]++, disabled) &&
            /* istanbul ignore next */
            (cov_10p2bwn6ad().b[5][1]++, styles.disabledText)],
            children: label
          }),
          /* istanbul ignore next */
          (cov_10p2bwn6ad().b[6][0]++, description) &&
          /* istanbul ignore next */
          (cov_10p2bwn6ad().b[6][1]++, (0, jsx_runtime_1.jsx)(react_native_1.Text, {
            style: [styles.description,
            /* istanbul ignore next */
            (cov_10p2bwn6ad().b[7][0]++, disabled) &&
            /* istanbul ignore next */
            (cov_10p2bwn6ad().b[7][1]++, styles.disabledText)],
            children: description
          }))]
        })]
      }), (0, jsx_runtime_1.jsx)(react_native_1.Switch, {
        value: value,
        onValueChange: onValueChange,
        disabled: disabled,
        trackColor: {
          false: theme.colors.border,
          true: theme.colors.primary + '40'
        },
        thumbColor: value ?
        /* istanbul ignore next */
        (cov_10p2bwn6ad().b[8][0]++, theme.colors.primary) :
        /* istanbul ignore next */
        (cov_10p2bwn6ad().b[8][1]++, theme.colors.textSecondary),
        testID: `${testID}-switch`
      })]
    })
  });
};
/* istanbul ignore next */
cov_10p2bwn6ad().s[12]++;
exports.ToggleSwitch = ToggleSwitch;
/* istanbul ignore next */
cov_10p2bwn6ad().s[13]++;
const createStyles = theme => {
  /* istanbul ignore next */
  cov_10p2bwn6ad().f[2]++;
  cov_10p2bwn6ad().s[14]++;
  return react_native_1.StyleSheet.create({
    container: {
      backgroundColor: theme.colors.card,
      borderRadius: theme.borderRadius.lg,
      padding: theme.spacing[4],
      marginVertical: theme.spacing[2],
      borderWidth: 1,
      borderColor: theme.colors.border
    },
    disabled: {
      opacity: 0.6,
      backgroundColor: theme.colors.disabled
    },
    content: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between'
    },
    labelContainer: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center'
    },
    icon: {
      fontSize: theme.fontSize.xl,
      marginRight: theme.spacing[3]
    },
    textContainer: {
      flex: 1
    },
    label: {
      fontSize: theme.fontSize.base,
      fontWeight: theme.fontWeight.semibold,
      color: theme.colors.text,
      marginBottom: theme.spacing[1]
    },
    description: {
      fontSize: theme.fontSize.sm,
      color: theme.colors.textSecondary,
      lineHeight: theme.lineHeight.snug * theme.fontSize.sm
    },
    disabledText: {
      color: theme.colors.textSecondary
    }
  });
};
/* istanbul ignore next */
cov_10p2bwn6ad().s[15]++;
exports.default = exports.ToggleSwitch;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,