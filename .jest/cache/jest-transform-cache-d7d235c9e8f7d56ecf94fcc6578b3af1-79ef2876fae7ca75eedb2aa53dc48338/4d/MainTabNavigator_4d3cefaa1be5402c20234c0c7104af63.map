{"version":3,"names":["cov_1wm2exrduv","actualCoverage","s","react_native_1","require","bottom_tabs_1","vector_icons_1","ThemeProvider_1","AlarmNavigator_1","WhiteNoiseNavigator_1","SettingsNavigator_1","FloatingSessionMonitor_1","Tab","createBottomTabNavigator","MainTabNavigator","f","theme","useTheme","tabBarOptions","tabBarStyle","backgroundColor","colors","surface","borderTopColor","border","borderTopWidth","height","paddingTop","paddingBottom","tabBarActiveTintColor","primary","tabBarInactiveTintColor","textSecondary","tabBarLabelStyle","fontSize","fontWeight","typography","medium","marginTop","headerShown","getTabBarIcon","route","focused","color","size","iconName","b","jsx_runtime_1","jsx","Ionicons","name","jsxs","View","style","styles","container","children","Navigator","screenOptions","tabBarIcon","tabBarAccessibilityLabel","tabBarTestID","toLowerCase","Screen","component","AlarmNavigator","options","tabBarLabel","tabBarBadge","undefined","WhiteNoiseNavigator","SettingsNavigator","FloatingSessionMonitor","exports","StyleSheet","create","flex","default"],"sources":["/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/navigation/MainTabNavigator.tsx"],"sourcesContent":["/**\n * Main Tab Navigator\n * \n * Bottom tab navigator for the main app functionality\n * with sleep-optimized design and accessibility.\n */\n\nimport React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from '../components/providers/ThemeProvider';\nimport { MainTabParamList } from '../types/navigation';\n\n// Import navigators\nimport { AlarmNavigator } from './AlarmNavigator';\nimport { WhiteNoiseNavigator } from './WhiteNoiseNavigator';\nimport { SettingsNavigator } from './SettingsNavigator';\n\n// Import components\nimport { FloatingSessionMonitor } from '../components/FloatingSessionMonitor';\n\nconst Tab = createBottomTabNavigator<MainTabParamList>();\n\nexport const MainTabNavigator: React.FC = () => {\n  const { theme } = useTheme();\n\n  const tabBarOptions = {\n    tabBarStyle: {\n      backgroundColor: theme.colors.surface,\n      borderTopColor: theme.colors.border,\n      borderTopWidth: 1,\n      height: 88, // Increased for better touch targets\n      paddingTop: 8,\n      paddingBottom: 28, // Account for home indicator\n    },\n    tabBarActiveTintColor: theme.colors.primary,\n    tabBarInactiveTintColor: theme.colors.textSecondary,\n    tabBarLabelStyle: {\n      fontSize: 12,\n      fontWeight: theme.typography.fontWeight.medium,\n      marginTop: 4,\n    },\n    headerShown: false,\n  };\n\n  const getTabBarIcon = (route: string, focused: boolean, color: string, size: number) => {\n    let iconName: string;\n\n    switch (route) {\n      case 'Alarms':\n        iconName = focused ? 'alarm' : 'alarm-outline';\n        break;\n      case 'WhiteNoise':\n        iconName = focused ? 'musical-notes' : 'musical-notes-outline';\n        break;\n      case 'Settings':\n        iconName = focused ? 'settings' : 'settings-outline';\n        break;\n      default:\n        iconName = 'circle-outline';\n    }\n\n    return <Ionicons name={iconName as any} size={size} color={color} />;\n  };\n\n  return (\n    <View style={styles.container}>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          ...tabBarOptions,\n          tabBarIcon: ({ focused, color, size }) =>\n            getTabBarIcon(route.name, focused, color, size),\n          // Accessibility\n          tabBarAccessibilityLabel: `${route.name} tab`,\n          tabBarTestID: `tab-${route.name.toLowerCase()}`,\n        })}\n      >\n        <Tab.Screen\n          name=\"Alarms\"\n          component={AlarmNavigator}\n          options={{\n            tabBarLabel: 'Alarms',\n            tabBarBadge: undefined, // Can be used for active alarm count\n          }}\n        />\n\n        <Tab.Screen\n          name=\"WhiteNoise\"\n          component={WhiteNoiseNavigator}\n          options={{\n            tabBarLabel: 'White Noise',\n          }}\n        />\n\n        <Tab.Screen\n          name=\"Settings\"\n          component={SettingsNavigator}\n          options={{\n            tabBarLabel: 'Settings',\n          }}\n        />\n      </Tab.Navigator>\n\n      {/* Floating Session Monitor - appears across all tabs */}\n      <FloatingSessionMonitor />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n\nexport default MainTabNavigator;"],"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","ignoreList":[]}