e33a3f88dff16643ae306dcb90c88ecd
"use strict";

/* istanbul ignore next */
function cov_1wm2exrduv() {
  var path = "/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/navigation/MainTabNavigator.tsx";
  var hash = "653709ce6f2b6417fa76cf86854809299891a149";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/navigation/MainTabNavigator.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 34
        }
      },
      "2": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 50
        }
      },
      "3": {
        start: {
          line: 5,
          column: 23
        },
        end: {
          line: 5,
          column: 46
        }
      },
      "4": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "5": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 52
        }
      },
      "6": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 8,
          column: 72
        }
      },
      "7": {
        start: {
          line: 10,
          column: 25
        },
        end: {
          line: 10,
          column: 52
        }
      },
      "8": {
        start: {
          line: 11,
          column: 30
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "9": {
        start: {
          line: 12,
          column: 28
        },
        end: {
          line: 12,
          column: 58
        }
      },
      "10": {
        start: {
          line: 14,
          column: 33
        },
        end: {
          line: 14,
          column: 80
        }
      },
      "11": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 57
        }
      },
      "12": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 67,
          column: 1
        }
      },
      "13": {
        start: {
          line: 17,
          column: 22
        },
        end: {
          line: 17,
          column: 53
        }
      },
      "14": {
        start: {
          line: 18,
          column: 26
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "15": {
        start: {
          line: 36,
          column: 26
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "16": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "17": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 63
        }
      },
      "18": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 22
        }
      },
      "19": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 79
        }
      },
      "20": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 22
        }
      },
      "21": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 69
        }
      },
      "22": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 22
        }
      },
      "23": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 44
        }
      },
      "24": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 109
        }
      },
      "25": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 66,
          column: 115
        }
      },
      "26": {
        start: {
          line: 53,
          column: 167
        },
        end: {
          line: 59,
          column: 17
        }
      },
      "27": {
        start: {
          line: 55,
          column: 62
        },
        end: {
          line: 55,
          column: 109
        }
      },
      "28": {
        start: {
          line: 68,
          column: 0
        },
        end: {
          line: 68,
          column: 44
        }
      },
      "29": {
        start: {
          line: 69,
          column: 15
        },
        end: {
          line: 73,
          column: 2
        }
      },
      "30": {
        start: {
          line: 74,
          column: 0
        },
        end: {
          line: 74,
          column: 43
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 16,
            column: 26
          }
        },
        loc: {
          start: {
            line: 16,
            column: 31
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 36,
            column: 27
          }
        },
        loc: {
          start: {
            line: 36,
            column: 59
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 36
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 53,
            column: 151
          },
          end: {
            line: 53,
            column: 152
          }
        },
        loc: {
          start: {
            line: 53,
            column: 167
          },
          end: {
            line: 59,
            column: 17
          }
        },
        line: 53
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 55,
            column: 32
          },
          end: {
            line: 55,
            column: 33
          }
        },
        loc: {
          start: {
            line: 55,
            column: 62
          },
          end: {
            line: 55,
            column: 109
          }
        },
        line: 55
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 41,
            column: 22
          }
        }, {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 44,
            column: 22
          }
        }, {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 47,
            column: 22
          }
        }, {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 49,
            column: 44
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 27
          },
          end: {
            line: 40,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 37
          },
          end: {
            line: 40,
            column: 44
          }
        }, {
          start: {
            line: 40,
            column: 47
          },
          end: {
            line: 40,
            column: 62
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 27
          },
          end: {
            line: 43,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 37
          },
          end: {
            line: 43,
            column: 52
          }
        }, {
          start: {
            line: 43,
            column: 55
          },
          end: {
            line: 43,
            column: 78
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 46,
            column: 27
          },
          end: {
            line: 46,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 37
          },
          end: {
            line: 46,
            column: 47
          }
        }, {
          start: {
            line: 46,
            column: 50
          },
          end: {
            line: 46,
            column: 68
          }
        }],
        line: 46
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/navigation/MainTabNavigator.tsx",
      mappings: "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",
      names: [],
      sources: ["/Users/yanivhadar/Desktop/White Noise Alarm/AlarmWhiteNoiseApp/src/navigation/MainTabNavigator.tsx"],
      sourcesContent: ["/**\n * Main Tab Navigator\n * \n * Bottom tab navigator for the main app functionality\n * with sleep-optimized design and accessibility.\n */\n\nimport React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from '../components/providers/ThemeProvider';\nimport { MainTabParamList } from '../types/navigation';\n\n// Import navigators\nimport { AlarmNavigator } from './AlarmNavigator';\nimport { WhiteNoiseNavigator } from './WhiteNoiseNavigator';\nimport { SettingsNavigator } from './SettingsNavigator';\n\n// Import components\nimport { FloatingSessionMonitor } from '../components/FloatingSessionMonitor';\n\nconst Tab = createBottomTabNavigator<MainTabParamList>();\n\nexport const MainTabNavigator: React.FC = () => {\n  const { theme } = useTheme();\n\n  const tabBarOptions = {\n    tabBarStyle: {\n      backgroundColor: theme.colors.surface,\n      borderTopColor: theme.colors.border,\n      borderTopWidth: 1,\n      height: 88, // Increased for better touch targets\n      paddingTop: 8,\n      paddingBottom: 28, // Account for home indicator\n    },\n    tabBarActiveTintColor: theme.colors.primary,\n    tabBarInactiveTintColor: theme.colors.textSecondary,\n    tabBarLabelStyle: {\n      fontSize: 12,\n      fontWeight: theme.typography.fontWeight.medium,\n      marginTop: 4,\n    },\n    headerShown: false,\n  };\n\n  const getTabBarIcon = (route: string, focused: boolean, color: string, size: number) => {\n    let iconName: string;\n\n    switch (route) {\n      case 'Alarms':\n        iconName = focused ? 'alarm' : 'alarm-outline';\n        break;\n      case 'WhiteNoise':\n        iconName = focused ? 'musical-notes' : 'musical-notes-outline';\n        break;\n      case 'Settings':\n        iconName = focused ? 'settings' : 'settings-outline';\n        break;\n      default:\n        iconName = 'circle-outline';\n    }\n\n    return <Ionicons name={iconName as any} size={size} color={color} />;\n  };\n\n  return (\n    <View style={styles.container}>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          ...tabBarOptions,\n          tabBarIcon: ({ focused, color, size }) =>\n            getTabBarIcon(route.name, focused, color, size),\n          // Accessibility\n          tabBarAccessibilityLabel: `${route.name} tab`,\n          tabBarTestID: `tab-${route.name.toLowerCase()}`,\n        })}\n      >\n        <Tab.Screen\n          name=\"Alarms\"\n          component={AlarmNavigator}\n          options={{\n            tabBarLabel: 'Alarms',\n            tabBarBadge: undefined, // Can be used for active alarm count\n          }}\n        />\n\n        <Tab.Screen\n          name=\"WhiteNoise\"\n          component={WhiteNoiseNavigator}\n          options={{\n            tabBarLabel: 'White Noise',\n          }}\n        />\n\n        <Tab.Screen\n          name=\"Settings\"\n          component={SettingsNavigator}\n          options={{\n            tabBarLabel: 'Settings',\n          }}\n        />\n      </Tab.Navigator>\n\n      {/* Floating Session Monitor - appears across all tabs */}\n      <FloatingSessionMonitor />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n\nexport default MainTabNavigator;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "653709ce6f2b6417fa76cf86854809299891a149"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wm2exrduv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wm2exrduv();
cov_1wm2exrduv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1wm2exrduv().s[1]++;
exports.MainTabNavigator = void 0;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_1wm2exrduv().s[2]++, require("react/jsx-runtime"));
const react_native_1 =
/* istanbul ignore next */
(cov_1wm2exrduv().s[3]++, require("react-native"));
const bottom_tabs_1 =
/* istanbul ignore next */
(cov_1wm2exrduv().s[4]++, require("@react-navigation/bottom-tabs"));
const vector_icons_1 =
/* istanbul ignore next */
(cov_1wm2exrduv().s[5]++, require("@expo/vector-icons"));
const ThemeProvider_1 =
/* istanbul ignore next */
(cov_1wm2exrduv().s[6]++, require("../components/providers/ThemeProvider"));
// Import navigators
const AlarmNavigator_1 =
/* istanbul ignore next */
(cov_1wm2exrduv().s[7]++, require("./AlarmNavigator"));
const WhiteNoiseNavigator_1 =
/* istanbul ignore next */
(cov_1wm2exrduv().s[8]++, require("./WhiteNoiseNavigator"));
const SettingsNavigator_1 =
/* istanbul ignore next */
(cov_1wm2exrduv().s[9]++, require("./SettingsNavigator"));
// Import components
const FloatingSessionMonitor_1 =
/* istanbul ignore next */
(cov_1wm2exrduv().s[10]++, require("../components/FloatingSessionMonitor"));
const Tab =
/* istanbul ignore next */
(cov_1wm2exrduv().s[11]++, (0, bottom_tabs_1.createBottomTabNavigator)());
/* istanbul ignore next */
cov_1wm2exrduv().s[12]++;
const MainTabNavigator = () => {
  /* istanbul ignore next */
  cov_1wm2exrduv().f[0]++;
  const {
    theme
  } =
  /* istanbul ignore next */
  (cov_1wm2exrduv().s[13]++, (0, ThemeProvider_1.useTheme)());
  const tabBarOptions =
  /* istanbul ignore next */
  (cov_1wm2exrduv().s[14]++, {
    tabBarStyle: {
      backgroundColor: theme.colors.surface,
      borderTopColor: theme.colors.border,
      borderTopWidth: 1,
      height: 88,
      // Increased for better touch targets
      paddingTop: 8,
      paddingBottom: 28 // Account for home indicator
    },
    tabBarActiveTintColor: theme.colors.primary,
    tabBarInactiveTintColor: theme.colors.textSecondary,
    tabBarLabelStyle: {
      fontSize: 12,
      fontWeight: theme.typography.fontWeight.medium,
      marginTop: 4
    },
    headerShown: false
  });
  /* istanbul ignore next */
  cov_1wm2exrduv().s[15]++;
  const getTabBarIcon = (route, focused, color, size) => {
    /* istanbul ignore next */
    cov_1wm2exrduv().f[1]++;
    let iconName;
    /* istanbul ignore next */
    cov_1wm2exrduv().s[16]++;
    switch (route) {
      case 'Alarms':
        /* istanbul ignore next */
        cov_1wm2exrduv().b[0][0]++;
        cov_1wm2exrduv().s[17]++;
        iconName = focused ?
        /* istanbul ignore next */
        (cov_1wm2exrduv().b[1][0]++, 'alarm') :
        /* istanbul ignore next */
        (cov_1wm2exrduv().b[1][1]++, 'alarm-outline');
        /* istanbul ignore next */
        cov_1wm2exrduv().s[18]++;
        break;
      case 'WhiteNoise':
        /* istanbul ignore next */
        cov_1wm2exrduv().b[0][1]++;
        cov_1wm2exrduv().s[19]++;
        iconName = focused ?
        /* istanbul ignore next */
        (cov_1wm2exrduv().b[2][0]++, 'musical-notes') :
        /* istanbul ignore next */
        (cov_1wm2exrduv().b[2][1]++, 'musical-notes-outline');
        /* istanbul ignore next */
        cov_1wm2exrduv().s[20]++;
        break;
      case 'Settings':
        /* istanbul ignore next */
        cov_1wm2exrduv().b[0][2]++;
        cov_1wm2exrduv().s[21]++;
        iconName = focused ?
        /* istanbul ignore next */
        (cov_1wm2exrduv().b[3][0]++, 'settings') :
        /* istanbul ignore next */
        (cov_1wm2exrduv().b[3][1]++, 'settings-outline');
        /* istanbul ignore next */
        cov_1wm2exrduv().s[22]++;
        break;
      default:
        /* istanbul ignore next */
        cov_1wm2exrduv().b[0][3]++;
        cov_1wm2exrduv().s[23]++;
        iconName = 'circle-outline';
    }
    /* istanbul ignore next */
    cov_1wm2exrduv().s[24]++;
    return (0, jsx_runtime_1.jsx)(vector_icons_1.Ionicons, {
      name: iconName,
      size: size,
      color: color
    });
  };
  /* istanbul ignore next */
  cov_1wm2exrduv().s[25]++;
  return (0, jsx_runtime_1.jsxs)(react_native_1.View, {
    style: styles.container,
    children: [(0, jsx_runtime_1.jsxs)(Tab.Navigator, {
      screenOptions: ({
        route
      }) => {
        /* istanbul ignore next */
        cov_1wm2exrduv().f[2]++;
        cov_1wm2exrduv().s[26]++;
        return {
          ...tabBarOptions,
          tabBarIcon: ({
            focused,
            color,
            size
          }) => {
            /* istanbul ignore next */
            cov_1wm2exrduv().f[3]++;
            cov_1wm2exrduv().s[27]++;
            return getTabBarIcon(route.name, focused, color, size);
          },
          // Accessibility
          tabBarAccessibilityLabel: `${route.name} tab`,
          tabBarTestID: `tab-${route.name.toLowerCase()}`
        };
      },
      children: [(0, jsx_runtime_1.jsx)(Tab.Screen, {
        name: "Alarms",
        component: AlarmNavigator_1.AlarmNavigator,
        options: {
          tabBarLabel: 'Alarms',
          tabBarBadge: undefined // Can be used for active alarm count
        }
      }), (0, jsx_runtime_1.jsx)(Tab.Screen, {
        name: "WhiteNoise",
        component: WhiteNoiseNavigator_1.WhiteNoiseNavigator,
        options: {
          tabBarLabel: 'White Noise'
        }
      }), (0, jsx_runtime_1.jsx)(Tab.Screen, {
        name: "Settings",
        component: SettingsNavigator_1.SettingsNavigator,
        options: {
          tabBarLabel: 'Settings'
        }
      })]
    }), (0, jsx_runtime_1.jsx)(FloatingSessionMonitor_1.FloatingSessionMonitor, {})]
  });
};
/* istanbul ignore next */
cov_1wm2exrduv().s[28]++;
exports.MainTabNavigator = MainTabNavigator;
const styles =
/* istanbul ignore next */
(cov_1wm2exrduv().s[29]++, react_native_1.StyleSheet.create({
  container: {
    flex: 1
  }
}));
/* istanbul ignore next */
cov_1wm2exrduv().s[30]++;
exports.default = exports.MainTabNavigator;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,